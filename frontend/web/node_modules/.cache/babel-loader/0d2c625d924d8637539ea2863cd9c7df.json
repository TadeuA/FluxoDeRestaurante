{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Orders() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tables = _useState2[0],\n        setTables = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        classifications = _useState6[0],\n        setClassifications = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        category = _useState8[0],\n        setCategory = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        dish = _useState10[0],\n        setDish = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        show = _useState12[0],\n        setShow = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        ingredients = _useState14[0],\n        setIngredients = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        extra = _useState16[0],\n        setExtra = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        command = _useState18[0],\n        setCommand = _useState18[1];\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        destiny = _useState20[0],\n        setDestiny = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        classTable = _useState22[0],\n        setClassTable = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        table = _useState24[0],\n        setTable = _useState24[1];\n\n  function nextRadio() {\n    setClassTable(\"\");\n    setTable(\"\");\n  }\n\n  function refresh() {\n    setCommand([]);\n    nextRadio();\n    setDestiny(null);\n  }\n\n  useEffect(() => {\n    nextRadio();\n  }, [destiny]);\n\n  const inSubmit = async data => {\n    destiny;\n  };\n\n  const onSubmit = async data => {\n    const ps = data.ps,\n          amount = data.amount;\n    delete data.ps;\n    delete data.amount;\n    let withdraw = [];\n    let extra = [];\n\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      } else {\n        dish.ingredients.map(item => {\n          if (item._id === data[prop]) {\n            withdraw.push(data[prop]);\n            delete data[prop];\n          }\n        });\n\n        if (data[prop]) {\n          extra.push(data[prop]);\n          delete data[prop];\n        }\n      }\n    }\n\n    const response = await api.post(\"orders\", {\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    });\n    let arr = command;\n    arr.push(response.data);\n    setCommand(arr);\n    handleClose();\n  };\n\n  const numTable = React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Local\"), React.createElement(\"select\", {\n    onChange: event => setClassTable(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), classifications.map(item => {\n    if (item.section === \"table\") {\n      return React.createElement(\"option\", {\n        key: item._id,\n        value: item.classification,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, item.classification);\n    }\n  })), classTable !== \"\" ? React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"N\\xFAmero da mesa\"), React.createElement(\"select\", {\n    onChange: event => setTable(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), tables.map(item => {\n    if (item.classification.classification === classTable) {\n      return React.createElement(\"option\", {\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.number);\n    }\n  }))) : null);\n  const delivery = React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"CEP: \"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"N\\xFAmero\"), React.createElement(\"label\", {\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Complemento\"));\n  const costummer = React.createElement(React.Fragment, null, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Cliente: \"), React.createElement(\"input\", {\n    type: \"text\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }));\n  const theDestiny = destiny === \"tables\" ? React.createElement(React.Fragment, null, numTable) : destiny === \"delivery\" ? {\n    delivery\n  } : destiny === \"take\" ? React.createElement(React.Fragment, null) : null;\n  const theCommand = command.length > 0 ? React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, command.map(item => {\n    const index = command.indexOf(item) + 1;\n    return React.createElement(\"li\", {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, index), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, item.amount, \"x \", item.dish.name), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: destroy,\n      alt: \"destroy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, item.withdraw.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Retirar: \"), item.withdraw.map(subitem => React.createElement(\"span\", {\n      key: subitem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, subitem.name))) : null, item.extra.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Adicionar: \"), item.extra.map(subitem => React.createElement(\"span\", {\n      key: subitem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, subitem.name))) : null, item.ps.length > 0 ? React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Observa\\xE7\\xE3o:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, item.ps)) : null, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Valor R$\", item.totalPrice))));\n  })), React.createElement(\"button\", {\n    id: \"confirm-command\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Confirmar\")) : React.createElement(\"span\", {\n    className: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Comanda vazia\");\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow(item) {\n    setDish(item);\n    setIngredients(item.ingredients);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    setTables(JSON.parse(localStorage.getItem(\"tables\")));\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"));\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = [];\n\n    function resolveThis(element, index, array) {\n      if (element.classification.classification === \"Extra\") {\n        variable.push(element);\n      }\n    }\n\n    arr.forEach(resolveThis);\n    setExtra(variable);\n  }, []);\n  const navClassifications = useMemo(() => {\n    return React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, classifications.map(item => {\n      if (item.section === \"dish\" && item.classification !== \"Extra\") {\n        return React.createElement(\"header\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => setCategory(item.classification),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, item.classification));\n      }\n    }));\n  }, [classifications]);\n  const listDish = useMemo(() => {\n    if (category === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Selecione uma categoria\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listDish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, dishs.map(item => {\n        if (item.classification.classification === category) {\n          return React.createElement(\"header\", {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => handleShow(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    }\n  }, [category]);\n  const modal = React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, dish.name)), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, \"Selecione os Ingredientes que deseja retirar\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, ingredients.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"Selecione os extras que deseja adicionar:\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, extra.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }, \"Observa\\xE7\\xF5es\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"ps\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Quantidade\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    ref: register,\n    min: \"1\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"button\", {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, \"Save Changes\"))));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }, navClassifications, listDish), React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"command\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"command\",\n    className: \"command-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }, \"Comanda\"), \" \"), React.createElement(\"nav\", {\n    className: \"command-menu\",\n    id: \"command-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(inSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"tables\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Mesa\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"destiny\",\n    onChange: () => setDestiny(\"tables\"),\n    checked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"delivery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"Entrega\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"destiny\",\n    onChange: () => setDestiny(\"delivery\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"take\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }, \"Levar\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"destiny\",\n    onChange: () => setDestiny(\"take\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }))), theDestiny, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }), theCommand))), modal);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js"],"names":["React","useEffect","useState","useMemo","api","NavBar","HomeBar","Modal","useForm","Orders","tables","setTables","dishs","setDishs","classifications","setClassifications","category","setCategory","dish","setDish","show","setShow","ingredients","setIngredients","extra","setExtra","command","setCommand","handleSubmit","register","errors","destiny","setDestiny","classTable","setClassTable","table","setTable","nextRadio","refresh","inSubmit","data","onSubmit","ps","amount","withdraw","prop","map","item","_id","push","response","post","arr","handleClose","numTable","event","target","value","section","classification","number","delivery","required","costummer","theDestiny","theCommand","length","index","indexOf","name","destroy","subitem","totalPrice","handleShow","JSON","parse","localStorage","getItem","variable","resolveThis","element","array","forEach","navClassifications","listDish","modal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,KAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,sCAAP;AACA,OAAO,cAAP;;AAMA,eAAe,SAASC,MAAT,GAAkB;AAAA,oBACHP,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,QACxBQ,MADwB;AAAA,QAChBC,SADgB;;AAAA,qBAELT,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAExBU,KAFwB;AAAA,QAEjBC,QAFiB;;AAAA,qBAGeX,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,QAGxBY,eAHwB;AAAA,QAGPC,kBAHO;;AAAA,qBAICb,QAAQ,CAAC,EAAD,CAJT;AAAA;AAAA,QAIxBc,QAJwB;AAAA,QAIdC,WAJc;;AAAA,qBAKPf,QAAQ,CAAC,EAAD,CALD;AAAA;AAAA,QAKxBgB,IALwB;AAAA,QAKlBC,OALkB;;AAAA,sBAMPjB,QAAQ,CAAC,KAAD,CAND;AAAA;AAAA,QAMxBkB,IANwB;AAAA,QAMlBC,OANkB;;AAAA,sBAOOnB,QAAQ,CAAC,EAAD,CAPf;AAAA;AAAA,QAOxBoB,WAPwB;AAAA,QAOXC,cAPW;;AAAA,sBAQLrB,QAAQ,CAAC,EAAD,CARH;AAAA;AAAA,QAQxBsB,KARwB;AAAA,QAQjBC,QARiB;;AAAA,sBASDvB,QAAQ,CAAC,EAAD,CATP;AAAA;AAAA,QASxBwB,OATwB;AAAA,QASfC,UATe;;AAAA,mBAUYnB,OAAO,EAVnB;AAAA,QAUvBoB,YAVuB,YAUvBA,YAVuB;AAAA,QAUTC,QAVS,YAUTA,QAVS;AAAA,QAUCC,MAVD,YAUCA,MAVD;;AAAA,sBAWD5B,QAAQ,CAAC,IAAD,CAXP;AAAA;AAAA,QAWxB6B,OAXwB;AAAA,QAWfC,UAXe;;AAAA,sBAYK9B,QAAQ,CAAC,EAAD,CAZb;AAAA;AAAA,QAYxB+B,UAZwB;AAAA,QAYZC,aAZY;;AAAA,sBAaLhC,QAAQ,CAAC,EAAD,CAbH;AAAA;AAAA,QAaxBiC,KAbwB;AAAA,QAajBC,QAbiB;;AAgB/B,WAASC,SAAT,GAAoB;AAClBH,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AACD,WAASE,OAAT,GAAkB;AAChBX,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAU,IAAAA,SAAS;AACTL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED/B,EAAAA,SAAS,CAAC,MAAI;AAACoC,IAAAA,SAAS;AAAG,GAAlB,EAAmB,CAACN,OAAD,CAAnB,CAAT;;AACA,QAAMQ,QAAQ,GAAG,MAAMC,IAAN,IAAa;AAC5BT,IAAAA,OAAO;AACR,GAFD;;AAGA,QAAMU,QAAQ,GAAG,MAAMD,IAAN,IAAc;AAAA,UACrBE,EADqB,GACNF,IADM,CACrBE,EADqB;AAAA,UACjBC,MADiB,GACNH,IADM,CACjBG,MADiB;AAE7B,WAAOH,IAAI,CAACE,EAAZ;AACA,WAAOF,IAAI,CAACG,MAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIpB,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIqB,IAAT,IAAiBL,IAAjB,EAAuB;AACrB,UAAIA,IAAI,CAACK,IAAD,CAAJ,KAAe,KAAnB,EAA0B;AACxB,eAAOL,IAAI,CAACK,IAAD,CAAX;AACD,OAFD,MAEK;AACH3B,QAAAA,IAAI,CAACI,WAAL,CAAiBwB,GAAjB,CAAqBC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,KAAaR,IAAI,CAACK,IAAD,CAApB,EAA2B;AACzBD,YAAAA,QAAQ,CAACK,IAAT,CAAcT,IAAI,CAACK,IAAD,CAAlB;AACA,mBAAOL,IAAI,CAACK,IAAD,CAAX;AACD;AAAC,SAJJ;;AAKA,YAAGL,IAAI,CAACK,IAAD,CAAP,EAAc;AACZrB,UAAAA,KAAK,CAACyB,IAAN,CAAWT,IAAI,CAACK,IAAD,CAAf;AACA,iBAAOL,IAAI,CAACK,IAAD,CAAX;AACD;AACF;AACJ;;AACC,UAAMK,QAAQ,GAAG,MAAM9C,GAAG,CAAC+C,IAAJ,CAAS,QAAT,EAAkB;AACvCjC,MAAAA,IAAI,EAAEA,IAAI,CAAC8B,GAD4B;AAEvCJ,MAAAA,QAFuC;AAGvCpB,MAAAA,KAHuC;AAIvCkB,MAAAA,EAJuC;AAKvCC,MAAAA;AALuC,KAAlB,CAAvB;AAOA,QAAIS,GAAG,GAAG1B,OAAV;AACA0B,IAAAA,GAAG,CAACH,IAAJ,CAASC,QAAQ,CAACV,IAAlB;AAEAb,IAAAA,UAAU,CAACyB,GAAD,CAAV;AAEAC,IAAAA,WAAW;AACZ,GAlCD;;AAmCA,QAAMC,QAAQ,GACX,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAEC;AAAQ,IAAA,QAAQ,EAAEC,KAAK,IAAIrB,aAAa,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG3C,eAAe,CAACgC,GAAhB,CAAqBC,IAAI,IAAI;AAC5B,QAAGA,IAAI,CAACW,OAAL,KAAiB,OAApB,EAA4B;AAC1B,aACA;AACE,QAAA,GAAG,EAAEX,IAAI,CAACC,GADZ;AAEE,QAAA,KAAK,EAAED,IAAI,CAACY,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGZ,IAAI,CAACY,cAJR,CADA;AAQD;AACF,GAXA,CAFH,CAFD,EAiBE1B,UAAU,KAAK,EAAf,GACA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,EAEC;AAAQ,IAAA,QAAQ,EAAEsB,KAAK,IAAInB,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG/C,MAAM,CAACoC,GAAP,CAAYC,IAAI,IAAI;AACnB,QAAGA,IAAI,CAACY,cAAL,CAAoBA,cAApB,KAAuC1B,UAA1C,EAAqD;AACnD,aACE;AAAQ,QAAA,KAAK,EAAEc,IAAI,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BD,IAAI,CAACa,MAA/B,CADF;AAEF;AAAC,GAJF,CAFH,CAFD,CADA,GAYF,IA7BA,CADH;AAkCA,QAAMC,QAAQ,GAAG,0CACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADa,EAEb;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAEhC,QAAQ,CAAC;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFa,EAGb;AAAO,IAAA,GAAG,EAAEjC,QAAQ,CAAC;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHa,EAIb;AAAO,IAAA,GAAG,EAAEjC,QAAQ,CAAC;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJa,CAAjB;AAOA,QAAMC,SAAS,GAAG,0CAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADgB,EAEhB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAElC,QAAQ,CAAC;AAAEiC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFgB,CAAlB;AAIA,QAAME,UAAU,GAAGjC,OAAO,KAAK,QAAZ,GACf,0CACCuB,QADD,CADe,GAIhBvB,OAAO,KAAK,UAAZ,GACE;AAAC8B,IAAAA;AAAD,GADF,GAEE9B,OAAO,KAAK,MAAZ,GACE,yCADF,GAEE,IARP;AAUA,QAAMkC,UAAU,GAAGvC,OAAO,CAACwC,MAAR,GAAiB,CAAjB,GAEf,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxC,OAAO,CAACoB,GAAR,CAAYC,IAAI,IAAI;AACnB,UAAMoB,KAAK,GAAIzC,OAAO,CAAC0C,OAAR,CAAgBrB,IAAhB,IAAuB,CAAtC;AACE,WACE;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOmB,KAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOpB,IAAI,CAACJ,MAAZ,QAAsBI,IAAI,CAAC7B,IAAL,CAAUmD,IAAhC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAK,MAAA,GAAG,EAAEC,OAAV;AAAmB,MAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,IAAI,CAACH,QAAL,CAAcsB,MAAd,GAAuB,CAAvB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,EAEEnB,IAAI,CAACH,QAAL,CAAcE,GAAd,CAAkByB,OAAO,IACxB;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACvB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,OAAO,CAACF,IADX,CADD,CAFF,CADF,GASA,IAVH,EAWGtB,IAAI,CAACvB,KAAL,CAAW0C,MAAX,GAAoB,CAApB,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEEnB,IAAI,CAACvB,KAAL,CAAWsB,GAAX,CAAeyB,OAAO,IACrB;AAAM,MAAA,GAAG,EAAEA,OAAO,CAACvB,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,OAAO,CAACF,IADX,CADD,CAFF,CADF,GASA,IApBH,EAqBGtB,IAAI,CAACL,EAAL,CAAQwB,MAAR,GAAiB,CAAjB,GACA,0CACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOnB,IAAI,CAACL,EAAZ,CAFD,CADA,GAKA,IA1BH,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaK,IAAI,CAACyB,UAAlB,CA3BF,CADF,CAJF,CADF;AAqCF,GAvCD,CADH,CADA,EA2CA;AAAQ,IAAA,EAAE,EAAC,iBAAX;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA3CA,CAFe,GAgDf;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAhDJ;;AAkDA,WAASnB,WAAT,GAAsB;AACpBhC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACF,WAASoD,UAAT,CAAoB1B,IAApB,EAAyB;AACvB5B,IAAAA,OAAO,CAAC4B,IAAD,CAAP;AACAxB,IAAAA,cAAc,CAACwB,IAAI,CAACzB,WAAN,CAAd;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA;;AAEDpB,EAAAA,SAAS,CAAC,MAAI;AAEZU,IAAAA,SAAS,CAAC+D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAD,CAAT;AACA,UAAMzB,GAAG,GAAGsB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACAhE,IAAAA,QAAQ,CAACuC,GAAD,CAAR;AACArC,IAAAA,kBAAkB,CAAC2D,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAD,CAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,aAASC,WAAT,CAAqBC,OAArB,EAA8Bb,KAA9B,EAAqCc,KAArC,EAA2C;AAC3C,UAAGD,OAAO,CAACrB,cAAR,CAAuBA,cAAvB,KAA0C,OAA7C,EAAqD;AACnDmB,QAAAA,QAAQ,CAAC7B,IAAT,CAAc+B,OAAd;AACD;AACF;;AAED5B,IAAAA,GAAG,CAAC8B,OAAJ,CAAYH,WAAZ;AACAtD,IAAAA,QAAQ,CAACqD,QAAD,CAAR;AACC,GAfQ,EAeP,EAfO,CAAT;AAiBA,QAAMK,kBAAkB,GAAGhF,OAAO,CAAC,MAAM;AACvC,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCW,eAAe,CAACgC,GAAhB,CAAoBC,IAAI,IAAI;AAC3B,UAAGA,IAAI,CAACW,OAAL,KAAiB,MAAjB,IAA2BX,IAAI,CAACY,cAAL,KAAwB,OAAtD,EAA8D;AAC5D,eACE;AAAQ,UAAA,GAAG,EAAEZ,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,OAAO,EAAE,MAAM/B,WAAW,CAAC8B,IAAI,CAACY,cAAN,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGZ,IAAI,CAACY,cADR,CADF,CADF;AAOD;AACF,KAVA,CADD,CADF;AAiBD,GAlBiC,EAkB/B,CAAC7C,eAAD,CAlB+B,CAAlC;AAoBA,QAAMsE,QAAQ,GAAGjF,OAAO,CAAC,MAAM;AAC7B,QAAGa,QAAQ,KAAK,EAAhB,EAAmB;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD,KAFD,MAEK;AACH,aACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KAAK,CAACkC,GAAN,CAAUC,IAAI,IAAI;AACjB,YAAGA,IAAI,CAACY,cAAL,CAAoBA,cAApB,KAAuC3C,QAA1C,EAAmD;AACjD,iBACE;AAAQ,YAAA,GAAG,EAAE+B,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAQ,YAAA,OAAO,EAAE,MAAMyB,UAAU,CAAC1B,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,IAAI,CAACsB,IADR,CADF,CADF;AAOD;AACF,OAVA,CADH,CADF;AAeD;AACF,GApBuB,EAoBtB,CAACrD,QAAD,CApBsB,CAAxB;AAwBA,QAAMqE,KAAK,GACP,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEjE,IAAb;AAAmB,IAAA,MAAM,EAAEiC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEzB,YAAY,CAACa,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcvB,IAAI,CAACmD,IAAnB,CADF,CADF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC/C,WAAW,CAACwB,GAAZ,CAAgBC,IAAI,IACrB,0CACE;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAED,IAAI,CAACsB,IAHb;AAIE,IAAA,KAAK,EAAEtB,IAAI,CAACC,GAJd;AAKE,IAAA,GAAG,EAAEnB,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,OAAO,EAAEkB,IAAI,CAACsB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BtB,IAAI,CAACsB,IAAjC,CATF,CADC,CADD,CAFF,CALF,EAuBE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC7C,KAAK,CAACsB,GAAN,CAAUC,IAAI,IACf,0CACE;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAED,IAAI,CAACsB,IAHb;AAIE,IAAA,KAAK,EAAEtB,IAAI,CAACC,GAJd;AAKE,IAAA,GAAG,EAAEnB,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,OAAO,EAAEkB,IAAI,CAACsB,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BtB,IAAI,CAACsB,IAAjC,CATF,CADC,CADD,CAFF,CAvBF,EAyCE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzC,EAEE;AAAU,IAAA,IAAI,EAAC,IAAf;AAAoB,IAAA,GAAG,EAAExC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzCF,EA6CE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,GAAG,EAAEA,QAHT;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEwB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,EAYE;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CA7CF,CADF,CADJ;AAmEA,SACE,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC8B,kBADD,EAECC,QAFD,CAFF,EAOA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,SAA1B;AAAmC,IAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EAQA;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlD,MARA,EAUA;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,EAAE,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAExD,YAAY,CAACW,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,QAAQ,EAAE,MAAMP,UAAU,CAAC,QAAD,CAA7D;AAAyE,IAAA,OAAO,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,QAAQ,EAAE,MAAMA,UAAU,CAAC,UAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,SAAzB;AAAmC,IAAA,QAAQ,EAAE,MAAMA,UAAU,CAAC,MAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,CADF,EAeGgC,UAfH,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBGC,UAjBH,CADF,CAVA,CAFF,EAmCGoB,KAnCH,CADF;AAuCD","sourcesContent":["import React, {useEffect, useState, useMemo} from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal} from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\"\nimport destroy from \"../../assets/button/destroy.svg\";\n\n\n\n\nexport default function Orders() {\n  const [tables, setTables] = useState([])\n  const [dishs, setDishs] = useState([]);\n  const [classifications, setClassifications] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [dish, setDish] = useState(\"\")\n  const [show, setShow] = useState(false);\n  const [ingredients, setIngredients] = useState([])\n  const [extra, setExtra] = useState([]);\n  const [command, setCommand] = useState([]);\n  const { handleSubmit, register, errors } = useForm();\n  const [destiny, setDestiny] = useState(null);\n  const [classTable, setClassTable] = useState(\"\")\n  const [table, setTable] = useState(\"\")\n\n\n  function nextRadio(){\n    setClassTable(\"\")\n    setTable(\"\")\n  }\n  function refresh(){\n    setCommand([])\n    nextRadio()\n    setDestiny(null)\n  }\n\n  useEffect(()=>{nextRadio()},[destiny])\n  const inSubmit = async data =>{\n    destiny\n  }\n  const onSubmit = async data => {\n    const { ps, amount } = data;\n    delete data.ps;\n    delete data.amount\n    let withdraw = []\n    let extra = []\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      }else{\n        dish.ingredients.map(item => {\n          if(item._id === data[prop]){\n            withdraw.push(data[prop])\n            delete data[prop]\n          }})\n        if(data[prop]){\n          extra.push(data[prop])\n          delete data[prop]\n        }\n      }\n  }\n    const response = await api.post(\"orders\",{\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    })\n    let arr = command\n    arr.push(response.data)\n\n    setCommand(arr)\n\n    handleClose()\n  }\n  const numTable =(\n     <>\n      <label>Local</label>\n      <select onChange={event => setClassTable(event.target.value)}>\n        <option value=\"\" ></option>\n        {classifications.map( item => {\n          if(item.section === \"table\"){\n            return(\n            <option\n              key={item._id}\n              value={item.classification}\n            >\n              {item.classification}\n            </option>\n            )\n          }\n        })}\n      </select>\n      {classTable !== \"\"\n      ?<>\n        <label>Número da mesa</label>\n        <select onChange={event => setTable(event.target.value)}>\n          <option value=\"\"></option>\n          {tables.map( item => {\n            if(item.classification.classification === classTable){\n              return(\n                <option value={item._id}>{item.number}</option>\n          )}})}\n      </select>\n      </>\n    :null}\n  </>\n  )\n\n  const delivery = <>\n      <label>CEP: </label>\n      <input type=\"text\" ref={register({ required: true })}/>\n      <label ref={register({ required: true })}>Número</label>\n      <label ref={register({ required: false })}>Complemento</label>\n    </>\n\n  const costummer = <>\n    <label>Cliente: </label>\n    <input type=\"text\" ref={register({ required: true })}/>\n    </>\n  const theDestiny = destiny === \"tables\"\n    ? <>\n      {numTable}\n      </>\n    :destiny === \"delivery\"\n      ?{delivery}\n      :destiny === \"take\"\n        ?<></>\n        :null\n\n  const theCommand = command.length > 0\n    ?(\n      <>\n      <ul>\n        {command.map(item => {\n          const index = (command.indexOf(item) +1 )\n            return(\n              <li key={item._id}>\n                <span>{index}</span>\n                <span>{item.amount}x {item.dish.name}</span>\n                <button><img src={destroy} alt=\"destroy\"/></button>\n                <ul>\n                  <li>\n                    {item.withdraw.length > 0\n                      ?<div>\n                        <h5>Retirar: </h5>\n                        {item.withdraw.map(subitem =>(\n                          <span key={subitem._id}>\n                            {subitem.name}\n                          </span>\n                        ))}\n                      </div>\n                    :null}\n                    {item.extra.length > 0\n                      ?<div>\n                        <h5>Adicionar: </h5>\n                        {item.extra.map(subitem =>(\n                          <span key={subitem._id}>\n                            {subitem.name}\n                          </span>\n                        ))}\n                      </div>\n                    :null}\n                    {item.ps.length > 0\n                    ?<>\n                      <h5>Observação:</h5>\n                      <span>{item.ps}</span>\n                    </>\n                    :null }\n                    <h5>Valor R${item.totalPrice}</h5>\n                  </li>\n                </ul>\n              </li>\n        )})}\n      </ul>\n      <button id=\"confirm-command\" type=\"submit\">Confirmar</button>\n      </>\n    )\n    :(<span className=\"empty\">Comanda vazia</span>)\n\n  function handleClose(){\n    setShow(false);\n  }\n function handleShow(item){\n   setDish(item)\n   setIngredients(item.ingredients)\n   setShow(true);\n  }\n\n  useEffect(()=>{\n\n    setTables(JSON.parse(localStorage.getItem(\"tables\")))\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"))\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = []\n    function resolveThis(element, index, array){\n    if(element.classification.classification === \"Extra\"){\n      variable.push(element)\n    }\n  }\n\n  arr.forEach(resolveThis)\n  setExtra(variable)\n  },[])\n\n  const navClassifications = useMemo(() => {\n    return(\n      <div id=\"navClass\">\n      {classifications.map(item => {\n        if(item.section === \"dish\" && item.classification !== \"Extra\"){\n          return(\n            <header key={item._id}>\n              <button onClick={() => setCategory(item.classification)}>\n                {item.classification}\n              </button>\n            </header>\n          )\n        }\n      })}\n\n     </div>\n    )\n\n  }, [classifications])\n\n  const listDish = useMemo(() => {\n    if(category === \"\"){\n      return <h1>Selecione uma categoria</h1>\n    }else{\n      return(\n        <div id=\"listDish\">\n          {dishs.map(item => {\n            if(item.classification.classification === category){\n              return(\n                <header key={item._id}>\n                  <button onClick={() => handleShow(item)}>\n                    {item.name}\n                  </button>\n                </header>\n              )\n            }\n          })}\n        </div>\n      )\n    }\n  },[category])\n\n\n\n  const modal = (\n      <Modal show={show} onHide={handleClose}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{dish.name}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className=\"options\">\n            Selecione os Ingredientes que deseja retirar\n            <div>\n            {ingredients.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            Selecione os extras que deseja adicionar:\n            <div>\n            {extra.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            <label htmlFor=\"ps\">Observações</label><br/>\n            <textarea name=\"ps\" ref={register} />\n          </Modal.Body>\n          <Modal.Footer>\n            <label htmlFor=\"amount\">Quantidade</label>\n            <input\n                type=\"number\"\n                name=\"amount\"\n                ref={register}\n                min=\"1\"\n                required\n            />\n            <button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </button>\n            <button variant=\"primary\" type=\"submit\">\n              Save Changes\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n  )\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"containerOrders\">\n        <NavBar />\n        <div id=\"alingOrders\">\n        {navClassifications}\n        {listDish}\n        </div>\n\n      <input type=\"checkbox\" id=\"command\"hidden />\n      <label htmlFor=\"command\" className=\"command-icon\"><p>Comanda</p> </label>\n\n      <nav className=\"command-menu\" id=\"command-list\" >\n        <form onSubmit={handleSubmit(inSubmit)}>\n          <div>\n            <div>\n              <label htmlFor=\"tables\">Mesa</label>\n              <input type=\"radio\" name=\"destiny\" onChange={() => setDestiny(\"tables\")} checked/>\n            </div>\n            <div>\n              <label htmlFor=\"delivery\">Entrega</label>\n              <input type=\"radio\" name=\"destiny\" onChange={() => setDestiny(\"delivery\")}/>\n            </div>\n            <div>\n              <label htmlFor=\"take\">Levar</label>\n              <input type=\"radio\" name=\"destiny\" onChange={() => setDestiny(\"take\")}/>\n            </div>\n          </div>\n          {theDestiny}\n          <br/>\n          {theCommand}\n        </form>\n      </nav>\n\n      </div>\n      {modal}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}