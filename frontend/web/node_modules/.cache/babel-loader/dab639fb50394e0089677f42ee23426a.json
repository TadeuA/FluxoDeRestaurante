{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nexport default function Orders() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dishs = _useState2[0],\n        setDishs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classifications = _useState4[0],\n        setClassifications = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dish = _useState8[0],\n        setDish = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ingredients = _useState12[0],\n        setIngredients = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        extra = _useState14[0],\n        setExtra = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        command = _useState16[0],\n        setCommand = _useState16[1];\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isOpen = _useState18[0],\n        setIsOpen = _useState18[1];\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const onSubmit = async data => {\n    const ps = data.ps,\n          amount = data.amount;\n    delete data.ps;\n    delete data.amount;\n    let withdraw = [];\n    let extra = [];\n\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      } else {\n        dish.ingredients.map(item => {\n          if (item._id === data[prop]) {\n            withdraw.push(data[prop]);\n            delete data[prop];\n          }\n        });\n\n        if (data[prop]) {\n          extra.push(data[prop]);\n          delete data[prop];\n        }\n      }\n    }\n\n    const response = await api.post(\"orders\", {\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    });\n    let arr = command;\n    arr.push(response.data);\n    console.log(arr);\n    setCommand(arr);\n    console.log(command);\n    handleClose();\n  };\n\n  const theCommand = useMemo(() => {\n    return !command.length !== 0 ? React.createElement(React.Fragment, null, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"item\"), React.createElement(Collapse, {\n      isOpen: isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\"))), command.map(item => React.createElement(\"li\", {\n      key: \"item.id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, item.dish.name, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"+\"))))) : React.createElement(\"span\", {\n      className: \"empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Comanda vazia\");\n  }, [command]);\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow(item) {\n    setDish(item);\n    setIngredients(item.ingredients);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"));\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = [];\n\n    function resolveThis(element, index, array) {\n      if (element.classification.classification === \"Extra\") {\n        variable.push(element);\n      }\n    }\n\n    arr.forEach(resolveThis);\n    setExtra(variable);\n  }, []);\n  const navClassifications = useMemo(() => {\n    return React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, classifications.map(item => {\n      if (item.section === \"dish\" && item.classification !== \"Extra\") {\n        return React.createElement(\"header\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => setCategory(item.classification),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, item.classification));\n      }\n    }));\n  }, [classifications]);\n  const listDish = useMemo(() => {\n    if (category === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Selecione uma categoria\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listDish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, dishs.map(item => {\n        if (item.classification.classification === category) {\n          return React.createElement(\"header\", {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => handleShow(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    }\n  }, [category]);\n  const modal = React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, dish.name)), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Selecione os Ingredientes que deseja retirar\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, ingredients.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Selecione os extras que deseja adicionar:\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, extra.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Observa\\xE7\\xF5es\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"ps\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"Quantidade\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    ref: register,\n    min: \"1\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"button\", {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Save Changes\"))));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, navClassifications, listDish), React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"command\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"command\",\n    className: \"command-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, \"Comanda\"), \" \"), React.createElement(\"nav\", {\n    className: \"command-menu\",\n    id: \"command-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, theCommand))), modal);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js"],"names":["React","useEffect","useState","useMemo","api","NavBar","HomeBar","Modal","useForm","Collapse","Button","CardBody","Card","Orders","dishs","setDishs","classifications","setClassifications","category","setCategory","dish","setDish","show","setShow","ingredients","setIngredients","extra","setExtra","command","setCommand","handleSubmit","register","errors","isOpen","setIsOpen","toggle","onSubmit","data","ps","amount","withdraw","prop","map","item","_id","push","response","post","arr","console","log","handleClose","theCommand","length","name","handleShow","JSON","parse","localStorage","getItem","variable","resolveThis","element","index","array","classification","forEach","navClassifications","section","listDish","modal"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,KAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,YAAjD;AAEA,OAAO,sCAAP;AAEA,OAAO,cAAP;AAKA,eAAe,SAASC,MAAT,GAAkB;AAAA,oBACLX,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACxBY,KADwB;AAAA,QACjBC,QADiB;;AAAA,qBAEeb,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAExBc,eAFwB;AAAA,QAEPC,kBAFO;;AAAA,qBAGCf,QAAQ,CAAC,EAAD,CAHT;AAAA;AAAA,QAGxBgB,QAHwB;AAAA,QAGdC,WAHc;;AAAA,qBAIPjB,QAAQ,CAAC,EAAD,CAJD;AAAA;AAAA,QAIxBkB,IAJwB;AAAA,QAIlBC,OAJkB;;AAAA,qBAKPnB,QAAQ,CAAC,KAAD,CALD;AAAA;AAAA,QAKxBoB,IALwB;AAAA,QAKlBC,OALkB;;AAAA,sBAMOrB,QAAQ,CAAC,EAAD,CANf;AAAA;AAAA,QAMxBsB,WANwB;AAAA,QAMXC,cANW;;AAAA,sBAOLvB,QAAQ,CAAC,EAAD,CAPH;AAAA;AAAA,QAOxBwB,KAPwB;AAAA,QAOjBC,QAPiB;;AAAA,sBAQDzB,QAAQ,CAAC,EAAD,CARP;AAAA;AAAA,QAQxB0B,OARwB;AAAA,QAQfC,UARe;;AAAA,mBASYrB,OAAO,EATnB;AAAA,QASvBsB,YATuB,YASvBA,YATuB;AAAA,QASTC,QATS,YASTA,QATS;AAAA,QASCC,MATD,YASCA,MATD;;AAAA,sBAUH9B,QAAQ,CAAC,KAAD,CAVL;AAAA;AAAA,QAUxB+B,MAVwB;AAAA,QAUhBC,SAVgB;;AAY/B,QAAMC,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AAEA,QAAMG,QAAQ,GAAG,MAAMC,IAAN,IAAc;AAAA,UACrBC,EADqB,GACND,IADM,CACrBC,EADqB;AAAA,UACjBC,MADiB,GACNF,IADM,CACjBE,MADiB;AAE7B,WAAOF,IAAI,CAACC,EAAZ;AACA,WAAOD,IAAI,CAACE,MAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAId,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIe,IAAT,IAAiBJ,IAAjB,EAAuB;AACrB,UAAIA,IAAI,CAACI,IAAD,CAAJ,KAAe,KAAnB,EAA0B;AACxB,eAAOJ,IAAI,CAACI,IAAD,CAAX;AACD,OAFD,MAEK;AACHrB,QAAAA,IAAI,CAACI,WAAL,CAAiBkB,GAAjB,CAAqBC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,GAAL,KAAaP,IAAI,CAACI,IAAD,CAApB,EAA2B;AACzBD,YAAAA,QAAQ,CAACK,IAAT,CAAcR,IAAI,CAACI,IAAD,CAAlB;AACA,mBAAOJ,IAAI,CAACI,IAAD,CAAX;AACD;AAAC,SAJJ;;AAKA,YAAGJ,IAAI,CAACI,IAAD,CAAP,EAAc;AACZf,UAAAA,KAAK,CAACmB,IAAN,CAAWR,IAAI,CAACI,IAAD,CAAf;AACA,iBAAOJ,IAAI,CAACI,IAAD,CAAX;AACD;AACF;AACJ;;AACC,UAAMK,QAAQ,GAAG,MAAM1C,GAAG,CAAC2C,IAAJ,CAAS,QAAT,EAAkB;AACvC3B,MAAAA,IAAI,EAAEA,IAAI,CAACwB,GAD4B;AAEvCJ,MAAAA,QAFuC;AAGvCd,MAAAA,KAHuC;AAIvCY,MAAAA,EAJuC;AAKvCC,MAAAA;AALuC,KAAlB,CAAvB;AAOA,QAAIS,GAAG,GAAGpB,OAAV;AACAoB,IAAAA,GAAG,CAACH,IAAJ,CAASC,QAAQ,CAACT,IAAlB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAnB,IAAAA,UAAU,CAACmB,GAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAZ;AACAuB,IAAAA,WAAW;AACZ,GAlCD;;AAoCA,QAAMC,UAAU,GAAGjD,OAAO,CAAC,MAAM;AAE/B,WAAO,CAACyB,OAAO,CAACyB,MAAT,KAAoB,CAApB,GAEL,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAQ,MAAA,OAAO,EAAElB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2MADF,CAHF,CADF,EAcGL,OAAO,CAACc,GAAR,CAAYC,IAAI,IACf;AAAI,MAAA,GAAG,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAACvB,IAAL,CAAUkC,IADb,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF,CADD,CAdH,CAFK,GA0BL;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA1BF;AA2BD,GA7ByB,EA6BxB,CAAC1B,OAAD,CA7BwB,CAA1B;;AA+BA,WAASuB,WAAT,GAAsB;AACpB5B,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AACF,WAASgC,UAAT,CAAoBZ,IAApB,EAAyB;AACvBtB,IAAAA,OAAO,CAACsB,IAAD,CAAP;AACAlB,IAAAA,cAAc,CAACkB,IAAI,CAACnB,WAAN,CAAd;AACAD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA;;AAEDtB,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAM+C,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA5C,IAAAA,QAAQ,CAACiC,GAAD,CAAR;AACA/B,IAAAA,kBAAkB,CAACuC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAD,CAAlB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,aAASC,WAAT,CAAqBC,OAArB,EAA8BC,KAA9B,EAAqCC,KAArC,EAA2C;AAC3C,UAAGF,OAAO,CAACG,cAAR,CAAuBA,cAAvB,KAA0C,OAA7C,EAAqD;AACnDL,QAAAA,QAAQ,CAACf,IAAT,CAAciB,OAAd;AACD;AACF;;AAEDd,IAAAA,GAAG,CAACkB,OAAJ,CAAYL,WAAZ;AACAlC,IAAAA,QAAQ,CAACiC,QAAD,CAAR;AACC,GAbQ,EAaP,EAbO,CAAT;AAeA,QAAMO,kBAAkB,GAAGhE,OAAO,CAAC,MAAM;AACvC,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCa,eAAe,CAAC0B,GAAhB,CAAoBC,IAAI,IAAI;AAC3B,UAAGA,IAAI,CAACyB,OAAL,KAAiB,MAAjB,IAA2BzB,IAAI,CAACsB,cAAL,KAAwB,OAAtD,EAA8D;AAC5D,eACE;AAAQ,UAAA,GAAG,EAAEtB,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,OAAO,EAAE,MAAMzB,WAAW,CAACwB,IAAI,CAACsB,cAAN,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGtB,IAAI,CAACsB,cADR,CADF,CADF;AAOD;AACF,KAVA,CADD,CADF;AAiBD,GAlBiC,EAkB/B,CAACjD,eAAD,CAlB+B,CAAlC;AAoBA,QAAMqD,QAAQ,GAAGlE,OAAO,CAAC,MAAM;AAC7B,QAAGe,QAAQ,KAAK,EAAhB,EAAmB;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACD,KAFD,MAEK;AACH,aACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,KAAK,CAAC4B,GAAN,CAAUC,IAAI,IAAI;AACjB,YAAGA,IAAI,CAACsB,cAAL,CAAoBA,cAApB,KAAuC/C,QAA1C,EAAmD;AACjD,iBACE;AAAQ,YAAA,GAAG,EAAEyB,IAAI,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAQ,YAAA,OAAO,EAAE,MAAMW,UAAU,CAACZ,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,IAAI,CAACW,IADR,CADF,CADF;AAOD;AACF,OAVA,CADH,CADF;AAeD;AACF,GApBuB,EAoBtB,CAACpC,QAAD,CApBsB,CAAxB;AAwBA,QAAMoD,KAAK,GACP,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEhD,IAAb;AAAmB,IAAA,MAAM,EAAE6B,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAErB,YAAY,CAACM,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAchB,IAAI,CAACkC,IAAnB,CADF,CADF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC9B,WAAW,CAACkB,GAAZ,CAAgBC,IAAI,IACrB,0CACE;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAED,IAAI,CAACW,IAHb;AAIE,IAAA,KAAK,EAAEX,IAAI,CAACC,GAJd;AAKE,IAAA,GAAG,EAAEb,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,OAAO,EAAEY,IAAI,CAACW,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,IAAI,CAACW,IAAjC,CATF,CADC,CADD,CAFF,CALF,EAuBE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC5B,KAAK,CAACgB,GAAN,CAAUC,IAAI,IACf,0CACE;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,GADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAED,IAAI,CAACW,IAHb;AAIE,IAAA,KAAK,EAAEX,IAAI,CAACC,GAJd;AAKE,IAAA,GAAG,EAAEb,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,OAAO,EAAEY,IAAI,CAACW,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,IAAI,CAACW,IAAjC,CATF,CADC,CADD,CAFF,CAvBF,EAyCE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADzC,EAEE;AAAU,IAAA,IAAI,EAAC,IAAf;AAAoB,IAAA,GAAG,EAAEvB,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzCF,EA6CE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,GAAG,EAAEA,QAHT;AAII,IAAA,GAAG,EAAC,GAJR;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEoB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,EAYE;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,CA7CF,CADF,CADJ;AAmEA,SACE,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCgB,kBADD,EAECE,QAFD,CAFF,EAOA;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,SAA1B;AAAmC,IAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,EAQA;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlD,MARA,EAUA;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,EAAE,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCjB,UADD,CADF,CAVA,CAFF,EAmBGkB,KAnBH,CADF;AAuBD","sourcesContent":["import React, {useEffect, useState, useMemo} from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal} from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport \"./styles.css\"\n\n\n\n\nexport default function Orders() {\n  const [dishs, setDishs] = useState([]);\n  const [classifications, setClassifications] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [dish, setDish] = useState(\"\")\n  const [show, setShow] = useState(false);\n  const [ingredients, setIngredients] = useState([])\n  const [extra, setExtra] = useState([]);\n  const [command, setCommand] = useState([]);\n  const { handleSubmit, register, errors } = useForm();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const onSubmit = async data => {\n    const { ps, amount } = data;\n    delete data.ps;\n    delete data.amount\n    let withdraw = []\n    let extra = []\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      }else{\n        dish.ingredients.map(item => {\n          if(item._id === data[prop]){\n            withdraw.push(data[prop])\n            delete data[prop]\n          }})\n        if(data[prop]){\n          extra.push(data[prop])\n          delete data[prop]\n        }\n      }\n  }\n    const response = await api.post(\"orders\",{\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    })\n    let arr = command\n    arr.push(response.data)\n    console.log(arr)\n    setCommand(arr)\n    console.log(command)\n    handleClose()\n  }\n\n  const theCommand = useMemo(() => {\n\n    return !command.length !== 0\n    ?(\n      <>\n        <li>\n\n          <button onClick={toggle}>item</button>\n          <Collapse isOpen={isOpen}>\n            <p>\n          Anim pariatur cliche reprehenderit,\n           enim eiusmod high life accusamus terry richardson ad squid. Nihil\n           anim keffiyeh helvetica, craft beer labore wes anderson cred\n           nesciunt sapiente ea proident.\n           </p>\n      </Collapse>\n        </li>\n\n        {command.map(item => (\n          <li key=\"item.id\">\n            <button href=\"\">\n              {item.dish.name}\n              <span>+</span>\n            </button>\n          </li>\n        ))}\n      </>\n    )\n    :(<span className=\"empty\">Comanda vazia</span>)\n  },[command])\n\n  function handleClose(){\n    setShow(false);\n  }\n function handleShow(item){\n   setDish(item)\n   setIngredients(item.ingredients)\n   setShow(true);\n  }\n\n  useEffect(()=>{\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"))\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = []\n    function resolveThis(element, index, array){\n    if(element.classification.classification === \"Extra\"){\n      variable.push(element)\n    }\n  }\n\n  arr.forEach(resolveThis)\n  setExtra(variable)\n  },[])\n\n  const navClassifications = useMemo(() => {\n    return(\n      <div id=\"navClass\">\n      {classifications.map(item => {\n        if(item.section === \"dish\" && item.classification !== \"Extra\"){\n          return(\n            <header key={item._id}>\n              <button onClick={() => setCategory(item.classification)}>\n                {item.classification}\n              </button>\n            </header>\n          )\n        }\n      })}\n\n     </div>\n    )\n\n  }, [classifications])\n\n  const listDish = useMemo(() => {\n    if(category === \"\"){\n      return <h1>Selecione uma categoria</h1>\n    }else{\n      return(\n        <div id=\"listDish\">\n          {dishs.map(item => {\n            if(item.classification.classification === category){\n              return(\n                <header key={item._id}>\n                  <button onClick={() => handleShow(item)}>\n                    {item.name}\n                  </button>\n                </header>\n              )\n            }\n          })}\n        </div>\n      )\n    }\n  },[category])\n\n\n\n  const modal = (\n      <Modal show={show} onHide={handleClose}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{dish.name}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className=\"options\">\n            Selecione os Ingredientes que deseja retirar\n            <div>\n            {ingredients.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            Selecione os extras que deseja adicionar:\n            <div>\n            {extra.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            <label htmlFor=\"ps\">Observações</label><br/>\n            <textarea name=\"ps\" ref={register} />\n          </Modal.Body>\n          <Modal.Footer>\n            <label htmlFor=\"amount\">Quantidade</label>\n            <input\n                type=\"number\"\n                name=\"amount\"\n                ref={register}\n                min=\"1\"\n                required\n            />\n            <button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </button>\n            <button variant=\"primary\" type=\"submit\">\n              Save Changes\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n  )\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"containerOrders\">\n        <NavBar />\n        <div id=\"alingOrders\">\n        {navClassifications}\n        {listDish}\n        </div>\n\n      <input type=\"checkbox\" id=\"command\"hidden />\n      <label htmlFor=\"command\" className=\"command-icon\"><p>Comanda</p> </label>\n\n      <nav className=\"command-menu\" id=\"command-list\" >\n        <ul>\n        {theCommand}\n        </ul>\n      </nav>\n\n      </div>\n      {modal}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}