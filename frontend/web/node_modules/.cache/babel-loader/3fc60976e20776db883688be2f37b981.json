{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        classifications = _useState8[0],\n        setClassifications = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        classification = _useState10[0],\n        setClassification = _useState10[1]; //listar ingredientes\n\n\n  const listIngredients = React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, classifications.map(item => React.createElement(\"li\", {\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"item.classification\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, ingredient.map(subItem => {\n    if (subItem.classification === item._id) {\n      return React.createElement(\"li\", {\n        key: subItem._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, subItem.name), React.createElement(\"button\", {\n        className: \"direction\",\n        onClick: () => handleDishs(subItem._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: direction,\n        alt: \"direction\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"destroy\",\n        onClick: () => handleDestroy(subItem),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: destroy,\n        alt: \"destroy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n  }))))); //atualizar lista de contidos em\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"spam\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"N\\xE3o pertence a nenhum prato\");\n  }, [dishs]); //atualizar a lista de pratos por ingredientes\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    setDishs(response.data);\n  } //criar novo ingrediente\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await api.post(\"/ingredients\", {\n      name,\n      classification\n    });\n    ingredient.push(response.data);\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n    loadIngredients();\n    window.alert(\"\".concat(name, \" adicionado a lista de ingredientes!\"));\n    setName(\"\");\n  } //atualizar lista de ingredientes\n\n\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }, []); //apagar ingrediente\n\n  async function handleDestroy(ingre) {\n    const response = await api.get(\"/foringredient/\".concat(ingre._id));\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\"A esclus\\xE3o de \".concat(ingre.name, \" ir\\xE1 alterar os seguintes pratos\\n      \").concat(conflits.map(conflit => \"\".concat(conflit.name, \" \")), \"\\n        deseja continuar?\"));\n\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const _id = dish._id,\n                name = dish.name,\n                price = dish.price;\n          let ingredients = dish.ingredients;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n          const Dish = await api.put(\"/dish/\".concat(_id), {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(\"/ingredients/\".concat(ingre._id));\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1);\n        localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n        loadIngredients();\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), listIngredients), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Defina a Classifica\\xE7\\xE3o\"), React.createElement(\"select\", {\n    onChange: event => setClassification(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"option\", {\n        key: item._id,\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, item.classification);\n    }\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Adicionar Novo\"))))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","api","Ingredients","ingredient","setIngredient","dishs","setDishs","name","setName","classifications","setClassifications","classification","setClassification","listIngredients","map","item","_id","subItem","handleDishs","direction","handleDestroy","destroy","preview","dish","idIngre","response","get","data","handleSubmit","event","preventDefault","post","push","localStorage","setItem","JSON","stringify","loadIngredients","window","alert","parse","getItem","ingre","conflits","confirm","conflit","Dishs","price","ingredients","index","indexOf","splice","Dish","put","delete","target","value","section"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\n\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [classifications, setClassifications] = useState([])\n  const [classification, setClassification] = useState(\"\")\n\n  //listar ingredientes\n  const listIngredients = (\n    <ul className=\"ingredient-list\">\n      {classifications.map(item => (\n        <li key={item._id}>\n          <span>item.classification</span>\n          <ul>\n          {ingredient.map(subItem => {\n            if(subItem.classification === item._id){\n              return(\n                <li key={subItem._id}>\n                  <h5>{subItem.name}</h5>\n                  <button className=\"direction\" onClick={() => handleDishs(subItem._id)}>\n                    <img src={direction} alt=\"direction\" />\n                </button>\n                <button className=\"destroy\" onClick={() => handleDestroy(subItem)}>\n                  <img src={destroy} alt=\"destroy\" />\n                </button>\n              </li>\n      )}})}\n          </ul>\n        </li>\n      ))}\n\n    </ul>\n  );\n\n  //atualizar lista de contidos em\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs.map(dish => (\n          <li key={dish._id}>\n            <h5>{dish.name}</h5>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <spam>Não pertence a nenhum prato</spam>\n    );\n  }, [dishs]);\n  //atualizar a lista de pratos por ingredientes\n  async function handleDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    setDishs(response.data);\n  }\n\n  //criar novo ingrediente\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const response = await api.post(`/ingredients`, { name, classification });\n    ingredient.push(response.data)\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient))\n    loadIngredients()\n    window.alert(`${name} adicionado a lista de ingredientes!`);\n    setName(\"\");\n  }\n  //atualizar lista de ingredientes\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")))\n  }, []);\n\n  //apagar ingrediente\n  async function handleDestroy(ingre) {\n    const response = await api.get(`/foringredient/${ingre._id}`);\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\n        `A esclusão de ${ingre.name} irá alterar os seguintes pratos\n      ${conflits.map(conflit => `${conflit.name} `)}\n        deseja continuar?`\n      );\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const { _id, name, price } = dish;\n          let { ingredients } = dish;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n\n          const Dish = await api.put(`/dish/${_id}`, {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(`/ingredients/${ingre._id}`);\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1)\n        localStorage.setItem(\n          \"ingredients\",\n          JSON.stringify(ingredient)\n        );\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n\n        loadIngredients();\n      }\n    }\n  }\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"alingIngredients\">\n        <NavBar />\n        <div id=\"containerIngredients\">\n          <div className=\"list sidenav\">\n            <label className=\"title\">Lista de Ingredients</label>\n            {listIngredients}\n          </div>\n          <div className=\"list advert\">\n            <label className=\"title\">Contem em: </label>\n            <header>{preview}</header>\n          </div>\n          <div className=\"list footer \">\n            <label className=\"title\">Novo </label>\n            <form onSubmit={handleSubmit}>\n              <fieldset onSubmit={handleSubmit}>\n                <legend>Ingrediente</legend>\n                <input\n                  type=\"text\"\n                  placeholder=\"Ingrediente\"\n                  value={name}\n                  onChange={event => setName(event.target.value)}\n                />\n\n              </fieldset>\n              <label>Defina a Classificação</label>\n              <select onChange={event => setClassification(event.target.value)}>\n                  <option value=\"\"></option>\n                  {classifications.map(item => {\n                    if(item.section === \"ingredient\"){\n                      return (\n                      <option key={item._id}value={item._id}>{item.classification}</option>\n                      )\n                    }\n                  })}\n                </select>\n              <button type=\"submit\">Adicionar Novo</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}