{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nexport default function Orders() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dishs = _useState2[0],\n        setDishs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classifications = _useState4[0],\n        setClassifications = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dish = _useState8[0],\n        setDish = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ingredients = _useState12[0],\n        setIngredients = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        extra = _useState14[0],\n        setExtra = _useState14[1];\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow(item) {\n    setDish(item);\n    setIngredients(item.ingredients);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"));\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }, []);\n  const navClassifications = useMemo(() => {\n    return React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, classifications.map(item => {\n      if (item.section === \"dish\") {\n        return React.createElement(\"header\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => setCategory(item.classification),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.classification));\n      }\n    }));\n  }, [classifications]);\n  const listDish = useMemo(() => {\n    if (category === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Selecione uma categoria\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listDish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, dishs.map(item => {\n        if (item.classification.classification === category) {\n          return React.createElement(\"header\", {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => handleShow(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    }\n  }, [category]);\n  const modal = React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, dish.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Ingredientes: \", ingredients.map(item => React.createElement(\"span\", {\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, item.name, \",\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"button\", {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Save Changes\")));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, navClassifications, listDish)), modal);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","Modal","Orders","dishs","setDishs","classifications","setClassifications","category","setCategory","dish","setDish","show","setShow","ingredients","setIngredients","extra","setExtra","handleClose","handleShow","item","arr","JSON","parse","localStorage","getItem","navClassifications","map","section","_id","classification","listDish","name","modal"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useMemo} from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\"\n\n\n\n\nexport default function Orders() {\n  const [dishs, setDishs] = useState([]);\n  const [classifications, setClassifications] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [dish, setDish] = useState(\"\")\n  const [show, setShow] = useState(false);\n  const [ingredients, setIngredients] = useState([])\n  const [extra, setExtra] = useState([]);\n\n  function handleClose(){\n    setShow(false);\n  }\n function handleShow(item){\n   setDish(item)\n   setIngredients(item.ingredients)\n   setShow(true);\n  }\n\n  useEffect(()=>{\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"))\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n\n  },[])\n  const navClassifications = useMemo(() => {\n    return(\n      <div id=\"navClass\">\n      {classifications.map(item => {\n        if(item.section === \"dish\"){\n          return(\n            <header key={item._id}>\n              <button onClick={() => setCategory(item.classification)}>\n                {item.classification}\n              </button>\n            </header>\n          )\n        }\n      })}\n\n     </div>\n    )\n\n  }, [classifications])\n\n  const listDish = useMemo(() => {\n    if(category === \"\"){\n      return <h1>Selecione uma categoria</h1>\n    }else{\n      return(\n        <div id=\"listDish\">\n          {dishs.map(item => {\n            if(item.classification.classification === category){\n              return(\n                <header key={item._id}>\n                  <button onClick={() => handleShow(item)}>\n                    {item.name}\n                  </button>\n                </header>\n              )\n            }\n          })}\n        </div>\n      )\n    }\n  },[category])\n\n\n\n  const modal = (\n      <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{dish.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Ingredientes: {ingredients.map(item => (<span key={item._id}>{item.name},</span>))}</Modal.Body>\n      <Modal.Body>\n\n\n      </Modal.Body>\n      <Modal.Footer>\n        <button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </button>\n        <button variant=\"primary\" onClick={handleClose}>\n          Save Changes\n        </button>\n      </Modal.Footer>\n    </Modal>\n  )\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"containerOrders\">\n        <NavBar />\n        <div id=\"alingOrders\">\n        {navClassifications}\n        {listDish}\n        </div>\n      </div>\n      {modal}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}