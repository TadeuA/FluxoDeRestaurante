{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Button, Modal } from 'react-bootstrap';\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        classifications = _useState8[0],\n        setClassifications = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        classification = _useState10[0],\n        setClassification = _useState10[1]; //listar ingredientes\n\n\n  const listIngredients = React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"li\", {\n        key: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, item.classification), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, ingredient.map(subItem => {\n        if (subItem.classification._id === item._id) {\n          return React.createElement(\"li\", {\n            key: subItem._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, subItem.name), React.createElement(\"button\", {\n            className: \"direction\",\n            onClick: () => handleDishs(subItem._id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: direction,\n            alt: \"direction\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          })), React.createElement(\"button\", {\n            className: \"destroy\",\n            onClick: () => handleDestroy(subItem),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: destroy,\n            alt: \"destroy\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          })));\n        }\n      })));\n    }\n  })); //mondal de modificação de pratos\n\n  function affectDish(ingre, conflits) {\n    return React.createElement(Modal.Dialog, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" A esclus\\xE3o de \", ingre.name, \" ir\\xE1 alterar os seguintes pratos\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, conflits.map(conflit => \"\".concat(conflit.name, \" \")))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Salvar altera\\xE7\\xF5es\")));\n  } //atualizar lista de contidos em\n\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"spam\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"N\\xE3o pertence a nenhum prato\");\n  }, [dishs]); //atualizar a lista de pratos por ingredientes\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    setDishs(response.data);\n  } //criar novo ingrediente\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await api.post(\"/ingredients\", {\n      name,\n      classification\n    });\n    ingredient.push(response.data);\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n    loadIngredients();\n    window.alert(\"\".concat(name, \" adicionado a lista de ingredientes!\"));\n    setName(\"\");\n  } //atualizar lista de ingredientes\n\n\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }, []); //apagar ingrediente\n\n  async function handleDestroy(ingre) {\n    const response = await api.get(\"/foringredient/\".concat(ingre._id));\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\"A esclus\\xE3o de \".concat(ingre.name, \" ir\\xE1 alterar os seguintes pratos\\n      \").concat(conflits.map(conflit => \"\".concat(conflit.name, \" \")), \"\\n        deseja continuar?\"));\n\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const _id = dish._id,\n                name = dish.name,\n                price = dish.price;\n          let ingredients = dish.ingredients;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n          const Dish = await api.put(\"/dish/\".concat(_id), {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(\"/ingredients/\".concat(ingre._id));\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1);\n        localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n        loadIngredients();\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), listIngredients), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Defina a Classifica\\xE7\\xE3o\"), React.createElement(\"select\", {\n    onChange: event => setClassification(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"option\", {\n        key: item._id,\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, item.classification);\n    }\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Adicionar Novo\"))))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","Button","Modal","api","Ingredients","ingredient","setIngredient","dishs","setDishs","name","setName","classifications","setClassifications","classification","setClassification","listIngredients","map","item","section","_id","subItem","handleDishs","direction","handleDestroy","destroy","affectDish","ingre","conflits","conflit","preview","dish","idIngre","response","get","data","handleSubmit","event","preventDefault","post","push","localStorage","setItem","JSON","stringify","loadIngredients","window","alert","parse","getItem","confirm","Dishs","price","ingredients","index","indexOf","splice","Dish","put","delete","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Button, Modal }  from  'react-bootstrap' ;\n\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\n\n\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [classifications, setClassifications] = useState([])\n  const [classification, setClassification] = useState(\"\")\n\n  //listar ingredientes\n  const listIngredients = (\n    <ul className=\"ingredient-list\">\n      {classifications.map(item => {\n        if(item.section ===\"ingredient\"){\n          return(\n          <li key={item._id}>\n            <span>{item.classification}</span>\n            <ul>\n            {ingredient.map(subItem => {\n\n              if(subItem.classification._id === item._id){\n                return(\n                  <li key={subItem._id}>\n                    <h5>{subItem.name}</h5>\n                    <button className=\"direction\" onClick={() => handleDishs(subItem._id)}>\n                      <img src={direction} alt=\"direction\" />\n                  </button>\n                  <button className=\"destroy\" onClick={() => handleDestroy(subItem)}>\n                    <img src={destroy} alt=\"destroy\" />\n                  </button>\n                </li>\n      )}})}\n          </ul>\n        </li>\n      )}})}\n\n    </ul>\n  );\n\n  //mondal de modificação de pratos\n  function affectDish(ingre,conflits){\n\n    return(\n    <Modal.Dialog>\n      <Modal.Header closeButton>\n        <Modal.Title> A esclusão de {ingre.name} irá alterar os seguintes pratos</Modal.Title>\n      </Modal.Header>\n\n    <Modal.Body>\n\n      <p>{conflits.map(conflit => `${conflit.name} `)}</p>\n    </Modal.Body>\n\n    <Modal.Footer>\n      <button >Cancelar</button>\n      <button >Salvar alterações</button>\n    </Modal.Footer>\n  </Modal.Dialog>\n)}\n\n  //atualizar lista de contidos em\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs.map(dish => (\n          <li key={dish._id}>\n            <h5>{dish.name}</h5>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <spam>Não pertence a nenhum prato</spam>\n    );\n  }, [dishs]);\n  //atualizar a lista de pratos por ingredientes\n  async function handleDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    setDishs(response.data);\n  }\n\n  //criar novo ingrediente\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const response = await api.post(`/ingredients`, { name, classification });\n    ingredient.push(response.data)\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient))\n    loadIngredients()\n    window.alert(`${name} adicionado a lista de ingredientes!`);\n    setName(\"\");\n  }\n  //atualizar lista de ingredientes\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")))\n  }, []);\n\n  //apagar ingrediente\n  async function handleDestroy(ingre) {\n    const response = await api.get(`/foringredient/${ingre._id}`);\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\n        `A esclusão de ${ingre.name} irá alterar os seguintes pratos\n      ${conflits.map(conflit => `${conflit.name} `)}\n        deseja continuar?`\n      );\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const { _id, name, price } = dish;\n          let { ingredients } = dish;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n\n          const Dish = await api.put(`/dish/${_id}`, {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(`/ingredients/${ingre._id}`);\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1)\n        localStorage.setItem(\n          \"ingredients\",\n          JSON.stringify(ingredient)\n        );\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n\n        loadIngredients();\n      }\n    }\n  }\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"alingIngredients\">\n        <NavBar />\n        <div id=\"containerIngredients\">\n          <div className=\"list sidenav\">\n            <label className=\"title\">Lista de Ingredients</label>\n            {listIngredients}\n          </div>\n          <div className=\"list advert\">\n            <label className=\"title\">Contem em: </label>\n            <header>{preview}</header>\n          </div>\n          <div className=\"list footer \">\n            <label className=\"title\">Novo </label>\n            <form onSubmit={handleSubmit}>\n              <fieldset onSubmit={handleSubmit}>\n                <legend>Ingrediente</legend>\n                <input\n                  type=\"text\"\n                  placeholder=\"Ingrediente\"\n                  value={name}\n                  onChange={event => setName(event.target.value)}\n                />\n\n              </fieldset>\n              <label>Defina a Classificação</label>\n              <select onChange={event => setClassification(event.target.value)}>\n                  <option value=\"\"></option>\n                  {classifications.map(item => {\n                    if(item.section === \"ingredient\"){\n                      return (\n                      <option key={item._id}value={item._id}>{item.classification}</option>\n                      )\n                    }\n                  })}\n                </select>\n              <button type=\"submit\">Adicionar Novo</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}