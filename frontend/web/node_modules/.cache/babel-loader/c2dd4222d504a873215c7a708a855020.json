{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        classifications = _useState8[0],\n        setClassifications = _useState8[1]; //listar ingredientes\n\n\n  const listIngredients = React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, ingredient.map(ingre => React.createElement(\"li\", {\n    key: ingre._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ingre.name), React.createElement(\"button\", {\n    className: \"direction\",\n    onClick: () => handleDishs(ingre._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: direction,\n    alt: \"direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"destroy\",\n    onClick: () => handleDestroy(ingre),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: destroy,\n    alt: \"destroy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))))); //atualizar lista de contidos em\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"spam\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"N\\xE3o pertence a nenhum prato\");\n  }, [dishs]); //atualizar a lista de pratos por ingredientes\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    setDishs(response.data);\n  } //criar novo ingrediente\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await api.post(\"/ingredients\", {\n      name\n    });\n    ingredient.push(response.data);\n    setIngredient(ingredient);\n    window.alert(\"\".concat(name, \" adicionado a lista de ingredientes!\"));\n    setName(\"\");\n  } //atualizar lista de ingredientes\n\n\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n\n  useEffect(() => {\n    loadIngredients();\n  }, []); //apagar ingrediente\n\n  async function handleDestroy(ingre) {\n    const response = await api.get(\"/foringredient/\".concat(ingre._id));\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\"A esclus\\xE3o de \".concat(ingre.name, \" ir\\xE1 alterar os seguintes pratos\\n      \").concat(conflits.map(conflit => \"\".concat(conflit.name, \" \")), \"\\n        deseja continuar?\"));\n\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const _id = dish._id,\n                name = dish.name,\n                price = dish.price;\n          let ingredients = dish.ingredients;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n          const Dish = await api.put(\"/dish/\".concat(_id), {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(\"/ingredients/\".concat(ingre._id));\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1);\n        localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n        loadIngredients();\n      }\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), listIngredients), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"option\", {\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, item.classification);\n    }\n  }))), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Adicionar Novo\"))))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","api","Ingredients","ingredient","setIngredient","dishs","setDishs","name","setName","classifications","setClassifications","listIngredients","map","ingre","_id","handleDishs","direction","handleDestroy","destroy","preview","dish","idIngre","response","get","data","handleSubmit","event","preventDefault","post","push","window","alert","loadIngredients","JSON","parse","localStorage","getItem","conflits","confirm","conflit","Dishs","price","ingredients","index","indexOf","splice","Dish","put","delete","setItem","stringify","target","value","item","section","classification"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\n\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [classifications, setClassifications] = useState([])\n\n  //listar ingredientes\n  const listIngredients = (\n    <ul className=\"ingredient-list\">\n      {ingredient.map(ingre => (\n        <li key={ingre._id}>\n          <h5>{ingre.name}</h5>\n          <button className=\"direction\" onClick={() => handleDishs(ingre._id)}>\n            <img src={direction} alt=\"direction\" />\n          </button>\n          <button className=\"destroy\" onClick={() => handleDestroy(ingre)}>\n            <img src={destroy} alt=\"destroy\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n\n  //atualizar lista de contidos em\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs.map(dish => (\n          <li key={dish._id}>\n            <h5>{dish.name}</h5>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <spam>Não pertence a nenhum prato</spam>\n    );\n  }, [dishs]);\n  //atualizar a lista de pratos por ingredientes\n  async function handleDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    setDishs(response.data);\n  }\n\n  //criar novo ingrediente\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await api.post(`/ingredients`, { name });\n    ingredient.push(response.data)\n    setIngredient(ingredient);\n    window.alert(`${name} adicionado a lista de ingredientes!`);\n    setName(\"\");\n  }\n  //atualizar lista de ingredientes\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n  useEffect(() => {\n    loadIngredients();\n  }, []);\n\n  //apagar ingrediente\n  async function handleDestroy(ingre) {\n    const response = await api.get(`/foringredient/${ingre._id}`);\n    const conflits = response.data;\n\n    if (conflits) {\n      const response = window.confirm(\n        `A esclusão de ${ingre.name} irá alterar os seguintes pratos\n      ${conflits.map(conflit => `${conflit.name} `)}\n        deseja continuar?`\n      );\n      if (response) {\n        const Dishs = JSON.parse(localStorage.getItem(\"dishs\"));\n        conflits.map(async dish => {\n          const { _id, name, price } = dish;\n          let { ingredients } = dish;\n          let index = ingredients.indexOf(ingre);\n          ingredients.splice(index, 1);\n\n          const Dish = await api.put(`/dish/${_id}`, {\n            name,\n            price,\n            ingredients\n          });\n          index = Dishs.indexOf(Dish);\n          Dishs[index] = Dish;\n        });\n        await api.delete(`/ingredients/${ingre._id}`);\n        const index = ingredient.indexOf(ingre);\n        ingredient.splice(index, 1)\n        localStorage.setItem(\n          \"ingredients\",\n          JSON.stringify(ingredient)\n        );\n        localStorage.setItem(\"dishs\", JSON.stringify(Dishs));\n\n        loadIngredients();\n      }\n    }\n  }\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"alingIngredients\">\n        <NavBar />\n        <div id=\"containerIngredients\">\n          <div className=\"list sidenav\">\n            <label className=\"title\">Lista de Ingredients</label>\n            {listIngredients}\n          </div>\n          <div className=\"list advert\">\n            <label className=\"title\">Contem em: </label>\n            <header>{preview}</header>\n          </div>\n          <div className=\"list footer \">\n            <label className=\"title\">Novo </label>\n            <form onSubmit={handleSubmit}>\n              <fieldset onSubmit={handleSubmit}>\n                <legend>Ingrediente</legend>\n                <input\n                  type=\"text\"\n                  placeholder=\"Ingrediente\"\n                  value={name}\n                  onChange={event => setName(event.target.value)}\n                />\n                <select>\n                  {classifications.map(item => {\n                    if(item.section === \"ingredient\"){\n                      return (\n                      <option value={item._id}>{item.classification}</option>\n                      )\n                    }\n                  })}\n                </select>\n              </fieldset>\n              <button type=\"submit\">Adicionar Novo</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}