{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newIngredient = _useState6[0],\n        setNewIngredient = _useState6[1];\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"img\", {\n      src: \"\",\n      alt: \"Pratos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }, [dishs]);\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    setDishs(response.data);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await api.post(\"/ingredient\", {\n      newIngredient\n    });\n  }\n\n  useEffect(() => {\n    async function loadIngredients() {\n      // const user_id = localStorage(\"user\")\n      const response = await api.get(\"/ingredients\");\n      setIngredient(response.data);\n    }\n\n    loadIngredients();\n  }, []);\n  return React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ingredient.map(ingre => React.createElement(\"li\", {\n    key: ingre._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, ingre.name), React.createElement(\"button\", {\n    onClick: () => handleDishs(ingre._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: direction,\n    alt: \"direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    action: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: newIngredient,\n    onChange: event => setNewIngredient(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","api","Ingredients","ingredient","setIngredient","dishs","setDishs","newIngredient","setNewIngredient","preview","map","dish","_id","name","handleDishs","idIngre","response","get","data","handleSubmit","event","preventDefault","post","loadIngredients","ingre","direction","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [newIngredient, setNewIngredient] = useState(\"\");\n\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs.map(dish => (\n          <li key={dish._id}>\n            <h5>{dish.name}</h5>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <img src=\"\" alt=\"Pratos\" />\n    );\n  }, [dishs]);\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    setDishs(response.data);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await api.post(`/ingredient`, { newIngredient });\n  }\n\n  useEffect(() => {\n    async function loadIngredients() {\n      // const user_id = localStorage(\"user\")\n      const response = await api.get(\"/ingredients\");\n\n      setIngredient(response.data);\n    }\n    loadIngredients();\n  }, []);\n\n  return (\n    <div id=\"alingIngredients\">\n      <NavBar />\n      <div id=\"containerIngredients\">\n        <div className=\"list sidenav\">\n          <label className=\"title\">Lista de Ingredients</label>\n          <ul className=\"ingredient-list\">\n            {ingredient.map(ingre => (\n              <li key={ingre._id}>\n                <h5>{ingre.name}</h5>\n                <button onClick={() => handleDishs(ingre._id)}>\n                  <img src={direction} alt=\"direction\" />\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"list advert\">\n          <label className=\"title\">Contem em: </label>\n          <header>{preview}</header>\n        </div>\n        <div className=\"list footer \">\n          <label className=\"title\">Novo </label>\n          <form action=\"\">\n            <fieldset onSubmit={handleSubmit}>\n              <legend>Ingrediente</legend>\n              <input\n                type=\"text\"\n                placeholder=\"Ingrediente\"\n                value={newIngredient}\n                onChange={event => setNewIngredient(event.target.value)}\n              />\n            </fieldset>\n            <button type=\"submit\"></button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}