{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 300px;\\n  margin: 0;\\n  margin-top: 2px;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 22px;\\n  background-color: #fafafa;\\n  border: 1px solid #e8e8e8;\\n  border-radius: 2px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 12px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 300px;\\n  border: 1px solid #d9d9d9;\\n  background-color: #fff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    line-height: 26px;\\n    padding: 2px 6px;\\n    flex-grow: 1;\\n    border: 0;\\n    outline: 0;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  padding: 0 0 4px;\\n  line-height: 1.5;\\n  display: block;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport { useAutocomplete } from '@material-ui/lab';\nimport CheckIcon from \"../../assets/button/plus.svg\";\nimport CloseIcon from \"../../assets/button/excluir.svg\";\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nconst Label = styled('label')(_templateObject());\nconst InputWrapper = styled('div')(_templateObject2());\nconst Tag = styled((_ref) => {\n  let label = _ref.label,\n      onDelete = _ref.onDelete,\n      props = _objectWithoutProperties(_ref, [\"label\", \"onDelete\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, label), React.createElement(CloseIcon, {\n    onClick: onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n})(_templateObject3());\nconst Listbox = styled('ul')(_templateObject4());\nexport default function Orders() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dishs = _useState2[0],\n        setDishs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classifications = _useState4[0],\n        setClassifications = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dish = _useState8[0],\n        setDish = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ingredients = _useState12[0],\n        setIngredients = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        extra = _useState14[0],\n        setExtra = _useState14[1];\n\n  const _useAutocomplete = useAutocomplete({\n    id: 'customized-hook-demo',\n    defaultValue: [extra[1]],\n    multiple: true,\n    options: extra,\n    getOptionLabel: option => option.title\n  }),\n        getRootProps = _useAutocomplete.getRootProps,\n        getInputLabelProps = _useAutocomplete.getInputLabelProps,\n        getInputProps = _useAutocomplete.getInputProps,\n        getTagProps = _useAutocomplete.getTagProps,\n        getListboxProps = _useAutocomplete.getListboxProps,\n        getOptionProps = _useAutocomplete.getOptionProps,\n        groupedOptions = _useAutocomplete.groupedOptions,\n        value = _useAutocomplete.value,\n        focused = _useAutocomplete.focused,\n        setAnchorEl = _useAutocomplete.setAnchorEl;\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow(item) {\n    setDish(item);\n    setIngredients(item.ingredients);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"));\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    arr.forEach(resolveThis);\n\n    function resolveThis(element, index, array) {\n      if (element.classification.classification !== \"extra\") {\n        array.splice(index, 1);\n      }\n    }\n\n    setExtra(arr);\n  }, []);\n  const navClassifications = useMemo(() => {\n    return React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, classifications.map(item => {\n      if (item.section === \"dish\") {\n        return React.createElement(\"header\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => setCategory(item.classification),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, item.classification));\n      }\n    }));\n  }, [classifications]);\n  const listDish = useMemo(() => {\n    if (category === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Selecione uma categoria\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listDish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, dishs.map(item => {\n        if (item.classification.classification === category) {\n          return React.createElement(\"header\", {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => handleShow(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    }\n  }, [category]);\n  const modal = React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, dish.name)), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Ingredientes: \", ingredients.map(item => React.createElement(\"span\", {\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, item.name, \",\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }), React.createElement(Label, Object.assign({}, getInputLabelProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }), \"Customized hook\"), React.createElement(InputWrapper, {\n    ref: setAnchorEl,\n    className: focused ? 'focused' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, value.map((option, index) => React.createElement(Tag, Object.assign({\n    key: option,\n    label: option.title\n  }, getTagProps({\n    index\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }))), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  })))), groupedOptions.length > 0 ? React.createElement(Listbox, Object.assign({}, getListboxProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), groupedOptions.map((option, index) => React.createElement(\"li\", Object.assign({}, getOptionProps({\n    option,\n    index\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, option.title), React.createElement(CheckIcon, {\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  })))) : null), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"button\", {\n    variant: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, \"Save Changes\")));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, navClassifications, listDish)), modal);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","Modal","useAutocomplete","styled","Label","InputWrapper","Tag","label","onDelete","props","Listbox","Orders","dishs","setDishs","classifications","setClassifications","category","setCategory","dish","setDish","show","setShow","ingredients","setIngredients","extra","setExtra","id","defaultValue","multiple","options","getOptionLabel","option","title","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","handleClose","handleShow","item","arr","JSON","parse","localStorage","getItem","forEach","resolveThis","element","index","array","classification","splice","navClassifications","map","section","_id","listDish","name","modal","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useMemo} from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport { useAutocomplete,} from '@material-ui/lab';\nimport CheckIcon from \"../../assets/button/plus.svg\"\nimport  CloseIcon from '../../assets/button/excluir.svg';\nimport styled from 'styled-components';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\"\n\n\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst InputWrapper = styled('div')`\n  width: 300px;\n  border: 1px solid #d9d9d9;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    line-height: 26px;\n    padding: 2px 6px;\n    flex-grow: 1;\n    border: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n  <div {...props}>\n    <span>{label}</span>\n    <CloseIcon onClick={onDelete} />\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 0;\n  margin-top: 2px;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\n\n\nexport default function Orders() {\n  const [dishs, setDishs] = useState([]);\n  const [classifications, setClassifications] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [dish, setDish] = useState(\"\")\n  const [show, setShow] = useState(false);\n  const [ingredients, setIngredients] = useState([])\n  const [extra, setExtra] = useState([]);\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    defaultValue: [extra[1]],\n    multiple: true,\n    options: extra,\n    getOptionLabel: option => option.title,\n  });\n\n  function handleClose(){\n    setShow(false);\n  }\n function handleShow(item){\n   setDish(item)\n   setIngredients(item.ingredients)\n   setShow(true);\n  }\n\n  useEffect(()=>{\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"))\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    arr.forEach(resolveThis)\n      function resolveThis(element, index, array){\n      if(element.classification.classification !== \"extra\"){\n        array.splice(index,1)\n      }\n    }\n    setExtra(arr)\n  },[])\n  const navClassifications = useMemo(() => {\n    return(\n      <div id=\"navClass\">\n      {classifications.map(item => {\n        if(item.section === \"dish\"){\n          return(\n            <header key={item._id}>\n              <button onClick={() => setCategory(item.classification)}>\n                {item.classification}\n              </button>\n            </header>\n          )\n        }\n      })}\n\n     </div>\n    )\n\n  }, [classifications])\n\n  const listDish = useMemo(() => {\n    if(category === \"\"){\n      return <h1>Selecione uma categoria</h1>\n    }else{\n      return(\n        <div id=\"listDish\">\n          {dishs.map(item => {\n            if(item.classification.classification === category){\n              return(\n                <header key={item._id}>\n                  <button onClick={() => handleShow(item)}>\n                    {item.name}\n                  </button>\n                </header>\n              )\n            }\n          })}\n        </div>\n      )\n    }\n  },[category])\n\n\n\n  const modal = (\n      <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{dish.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Ingredientes: {ingredients.map(item => (<span key={item._id}>{item.name},</span>))}</Modal.Body>\n      <Modal.Body>\n      <div {...getRootProps()}>\n        <Label {...getInputLabelProps()}>Customized hook</Label>\n        <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n          {value.map((option, index) => (\n            <Tag key={option}label={option.title} {...getTagProps({ index })} />\n          ))}\n\n          <input {...getInputProps()} />\n        </InputWrapper>\n      </div>\n      {groupedOptions.length > 0 ? (\n        <Listbox {...getListboxProps()}>\n          {groupedOptions.map((option, index) => (\n            <li {...getOptionProps({ option, index })}>\n              <span>{option.title}</span>\n              <CheckIcon fontSize=\"small\" />\n            </li>\n          ))}\n        </Listbox>\n      ) : null}\n\n      </Modal.Body>\n      <Modal.Footer>\n        <button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </button>\n        <button variant=\"primary\" onClick={handleClose}>\n          Save Changes\n        </button>\n      </Modal.Footer>\n    </Modal>\n  )\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"containerOrders\">\n        <NavBar />\n        <div id=\"alingOrders\">\n        {navClassifications}\n        {listDish}\n        </div>\n      </div>\n      {modal}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}