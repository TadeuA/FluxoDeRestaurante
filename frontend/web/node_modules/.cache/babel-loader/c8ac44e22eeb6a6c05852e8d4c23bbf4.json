{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1]; //listar ingredientes\n\n\n  const listIngredients = React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, ingredient.map(ingre => React.createElement(\"li\", {\n    key: ingre._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, ingre.name), React.createElement(\"button\", {\n    onClick: () => handleDishs(ingre._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: direction,\n    alt: \"direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => handleDestroy(ingre),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: destroy,\n    alt: \"destroy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))))); //atualizar lista de contidos em\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, dishs && dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"spam\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"N\\xE3o pertence a nenhum prato\");\n  }, [dishs]); //atualizar a lista de pratos por ingredientes\n\n  function handleDishs(idIngre) {\n    const array = searchDishs(idIngre);\n    console.log(array.PromiseValue);\n    setDishs();\n  } //pesquisar lista de pratos por ingredientes\n\n\n  async function searchDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    const array = response.data;\n    return array;\n  } //criar novo ingrediente\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await api.post(\"/ingredients\", {\n      name\n    });\n    loadIngredients();\n    window.alert(\"\".concat(name, \" adicionado a lista de ingredientes!\"));\n    setName(\"\");\n  } //atualizar lista de ingredientes\n\n\n  async function loadIngredients() {\n    // const user_id = localStorage(\"user\")\n    const response = await api.get(\"/ingredients\");\n    setIngredient(response.data);\n  }\n\n  useEffect(() => {\n    loadIngredients();\n  }, []); //apagar ingrediente\n\n  async function handleDestroy(ingre) {\n    const conflits = searchDishs(ingre._id);\n\n    async function handleConflits() {\n      const response = window.confirm(\"A esclus\\xE3o de \".concat(ingre.name, \" ir\\xE1 alterar os seguintes pratos\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, conflits.map(conflit => React.createElement(\"li\", {\n        key: conflit._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, conflit.name)))), \"deseja continuar?\");\n\n      if (response) {\n        conflits.map(async dish => {\n          const _id = dish._id,\n                name = dish.name,\n                price = dish.price;\n          let ingredients = dish.ingredients;\n          let ingredient = [];\n          ingredients.map(ingred => {\n            if (ingred !== ingre) {\n              ingredient.push(ingred);\n            }\n          });\n          ingredients = ingredient;\n          await api.put(\"/dishs/\".concat(_id), {\n            name,\n            price,\n            ingredients\n          });\n        });\n      }\n\n      if (conflits) handleConflits(ingre);\n      await api.delete(\"/ingredients/\".concat(ingre._id));\n      loadIngredients();\n    }\n  }\n\n  return React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), listIngredients), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Adicionar Novo\")))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","api","Ingredients","ingredient","setIngredient","dishs","setDishs","name","setName","listIngredients","map","ingre","_id","handleDishs","direction","handleDestroy","destroy","preview","dish","idIngre","array","searchDishs","console","log","PromiseValue","response","get","data","handleSubmit","event","preventDefault","post","loadIngredients","window","alert","conflits","handleConflits","confirm","conflit","price","ingredients","ingred","push","put","delete","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [name, setName] = useState(\"\");\n\n  //listar ingredientes\n  const listIngredients = (\n    <ul className=\"ingredient-list\">\n      {ingredient.map(ingre => (\n        <li key={ingre._id}>\n          <h5>{ingre.name}</h5>\n          <button onClick={() => handleDishs(ingre._id)}>\n            <img src={direction} alt=\"direction\" />\n          </button>\n          <button onClick={() => handleDestroy(ingre)}>\n            <img src={destroy} alt=\"destroy\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n\n  //atualizar lista de contidos em\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs &&\n          dishs.map(dish => (\n            <li key={dish._id}>\n              <h5>{dish.name}</h5>\n            </li>\n          ))}\n      </ul>\n    ) : (\n      <spam>Não pertence a nenhum prato</spam>\n    );\n  }, [dishs]);\n  //atualizar a lista de pratos por ingredientes\n  function handleDishs(idIngre) {\n    const array = searchDishs(idIngre);\n    console.log(array.PromiseValue);\n    setDishs();\n  }\n  //pesquisar lista de pratos por ingredientes\n  async function searchDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    const array = response.data;\n    return array;\n  }\n  //criar novo ingrediente\n  async function handleSubmit(event) {\n    event.preventDefault();\n    await api.post(`/ingredients`, { name });\n    loadIngredients();\n    window.alert(`${name} adicionado a lista de ingredientes!`);\n    setName(\"\");\n  }\n  //atualizar lista de ingredientes\n  async function loadIngredients() {\n    // const user_id = localStorage(\"user\")\n    const response = await api.get(\"/ingredients\");\n\n    setIngredient(response.data);\n  }\n  useEffect(() => {\n    loadIngredients();\n  }, []);\n\n  //apagar ingrediente\n  async function handleDestroy(ingre) {\n    const conflits = searchDishs(ingre._id);\n    async function handleConflits() {\n      const response = window.confirm(\n        `A esclusão de ${ingre.name} irá alterar os seguintes pratos`,\n        <ul>\n          {conflits.map(conflit => (\n            <li key={conflit._id}>\n              <h5>{conflit.name}</h5>\n            </li>\n          ))}\n        </ul>,\n        \"deseja continuar?\"\n      );\n      if (response) {\n        conflits.map(async dish => {\n          const { _id, name, price } = dish;\n          let { ingredients } = dish;\n          let ingredient = [];\n          ingredients.map(ingred => {\n            if (ingred !== ingre) {\n              ingredient.push(ingred);\n            }\n          });\n          ingredients = ingredient;\n          await api.put(`/dishs/${_id}`, {\n            name,\n            price,\n            ingredients\n          });\n        });\n      }\n      if (conflits) handleConflits(ingre);\n      await api.delete(`/ingredients/${ingre._id}`);\n      loadIngredients();\n    }\n  }\n\n  return (\n    <div id=\"alingIngredients\">\n      <NavBar />\n      <div id=\"containerIngredients\">\n        <div className=\"list sidenav\">\n          <label className=\"title\">Lista de Ingredients</label>\n          {listIngredients}\n        </div>\n        <div className=\"list advert\">\n          <label className=\"title\">Contem em: </label>\n          <header>{preview}</header>\n        </div>\n        <div className=\"list footer \">\n          <label className=\"title\">Novo </label>\n          <form onSubmit={handleSubmit}>\n            <fieldset onSubmit={handleSubmit}>\n              <legend>Ingrediente</legend>\n              <input\n                type=\"text\"\n                placeholder=\"Ingrediente\"\n                value={name}\n                onChange={event => setName(event.target.value)}\n              />\n            </fieldset>\n            <button type=\"submit\">Adicionar Novo</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}