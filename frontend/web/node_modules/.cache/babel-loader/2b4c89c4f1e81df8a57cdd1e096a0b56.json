{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default function Ingredients() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ingredient = _useState2[0],\n        setIngredient = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dishs = _useState4[0],\n        setDishs = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        classifications = _useState8[0],\n        setClassifications = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        classification = _useState10[0],\n        setClassification = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        conflits = _useState12[0],\n        setConflits = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        affect = _useState14[0],\n        setAffect = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        item = _useState16[0],\n        setItem = _useState16[1];\n\n  const handleCloseAffect = () => setAffect(false);\n\n  const handleAffect = () => setAffect(true); //listar ingredientes\n\n\n  const listIngredients = React.createElement(\"ul\", {\n    className: \"ingredient-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"li\", {\n        key: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, item.classification), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, ingredient.map(subItem => {\n        if (subItem.classification._id === item._id) {\n          return React.createElement(\"li\", {\n            key: subItem._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, subItem.name), React.createElement(\"button\", {\n            className: \"direction\",\n            onClick: () => handleDishs(subItem._id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: direction,\n            alt: \"direction\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          })), React.createElement(\"button\", {\n            className: \"destroy\",\n            onClick: () => handleDestroy(subItem),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: destroy,\n            alt: \"destroy\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          })));\n        }\n      })));\n    }\n  }));\n\n  function handleAffectDish() {\n    handleCloseAffect();\n    conflits.map(async dish => {\n      const _id = dish._id,\n            name = dish.name,\n            price = dish.price;\n      let ingredients = dish.ingredients;\n      let index = ingredients.indexOf(item);\n      ingredients.splice(index, 1);\n      const Dish = await api.put(\"/dish/\".concat(_id), {\n        name,\n        price,\n        ingredients\n      });\n      index = dishs.indexOf(Dish);\n      dishs[index] = Dish;\n    });\n    destroyIngredient();\n    localStorage.setItem(\"dishs\", JSON.stringify(dishs));\n    loadIngredients();\n  }\n\n  async function destroyIngredient() {\n    await api.delete(\"/ingredients/\".concat(item._id));\n    const index = ingredient.indexOf(item);\n    ingredient.splice(index, 1);\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n  }\n\n  const affectDish = useMemo(() => {\n    return React.createElement(Modal, {\n      show: affect,\n      onHide: handleCloseAffect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"A esclus\\xE3o de $\", item.name, \" ir\\xE1 alterar os seguintes pratos\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, conflits.map(conflit => \"\".concat(conflit.name, \" \"))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      variant: \"secondary\",\n      onClick: handleCloseAffect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(\"button\", {\n      variant: \"primary\",\n      onClick: handleAffectDish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Salvar configura\\xE7\\xF5es\")));\n  }, [conflits, affect]); //atualizar lista de contidos em\n\n  const preview = useMemo(() => {\n    return dishs ? React.createElement(\"ul\", {\n      className: \"ingredient-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, dishs.map(dish => React.createElement(\"li\", {\n      key: dish._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, dish.name)))) : React.createElement(\"spam\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"N\\xE3o pertence a nenhum prato\");\n  }, [dishs]); //atualizar a lista de pratos por ingredientes\n\n  async function handleDishs(idIngre) {\n    const response = await api.get(\"/foringredient/\".concat(idIngre));\n    setDishs(response.data);\n  } //criar novo ingrediente\n\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const response = await api.post(\"/ingredients\", {\n      name,\n      classification\n    });\n    ingredient.push(response.data);\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient));\n    loadIngredients();\n    window.alert(\"\".concat(name, \" adicionado a lista de ingredientes!\"));\n    setName(\"\");\n  } //atualizar lista de ingredientes\n\n\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }, []); //apagar ingrediente\n\n  async function handleDestroy(ingre) {\n    const response = await api.get(\"/foringredient/\".concat(ingre._id));\n\n    if (response.data.length > 0) {\n      setConflits(response.data);\n      setItem(ingre);\n      handleAffect();\n    } else {\n      destroyIngredient();\n      loadIngredients();\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerIngredients\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"list sidenav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Lista de Ingredients\"), listIngredients), React.createElement(\"div\", {\n    className: \"list advert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Contem em: \"), React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, preview)), React.createElement(\"div\", {\n    className: \"list footer \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Novo \"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Ingrediente\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Ingrediente\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Defina a Classifica\\xE7\\xE3o\"), React.createElement(\"select\", {\n    onChange: event => setClassification(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), classifications.map(item => {\n    if (item.section === \"ingredient\") {\n      return React.createElement(\"option\", {\n        key: item._id,\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, item.classification);\n    }\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Adicionar Novo\"))))), affectDish);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/ingredients/index.js"],"names":["React","useEffect","useState","useMemo","NavBar","HomeBar","Modal","api","Ingredients","ingredient","setIngredient","dishs","setDishs","name","setName","classifications","setClassifications","classification","setClassification","conflits","setConflits","affect","setAffect","item","setItem","handleCloseAffect","handleAffect","listIngredients","map","section","_id","subItem","handleDishs","direction","handleDestroy","destroy","handleAffectDish","dish","price","ingredients","index","indexOf","splice","Dish","put","destroyIngredient","localStorage","JSON","stringify","loadIngredients","delete","affectDish","conflit","preview","idIngre","response","get","data","handleSubmit","event","preventDefault","post","push","window","alert","parse","getItem","ingre","length","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal }  from  'react-bootstrap' ;\n\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport destroy from \"../../assets/button/destroy.svg\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nexport default function Ingredients() {\n  const [ingredient, setIngredient] = useState([]);\n  const [dishs, setDishs] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [classifications, setClassifications] = useState([])\n  const [classification, setClassification] = useState(\"\")\n  const [conflits, setConflits] = useState([])\n  const [affect, setAffect] = useState(false);\n  const [item, setItem] = useState(\"\")\n\n  const handleCloseAffect = () => setAffect(false);\n  const handleAffect = () => setAffect(true);\n  //listar ingredientes\n  const listIngredients = (\n    <ul className=\"ingredient-list\">\n      {classifications.map(item => {\n        if(item.section ===\"ingredient\"){\n          return(\n          <li key={item._id}>\n            <span>{item.classification}</span>\n            <ul>\n            {ingredient.map(subItem => {\n\n              if(subItem.classification._id === item._id){\n                return(\n                  <li key={subItem._id}>\n                    <h5>{subItem.name}</h5>\n                    <button className=\"direction\" onClick={() => handleDishs(subItem._id)}>\n                      <img src={direction} alt=\"direction\" />\n                  </button>\n                  <button className=\"destroy\" onClick={() => handleDestroy(subItem)}>\n                    <img src={destroy} alt=\"destroy\" />\n                  </button>\n                </li>\n      )}})}\n          </ul>\n        </li>\n      )}})}\n\n    </ul>\n  );\nfunction handleAffectDish(){\n  handleCloseAffect();\n  conflits.map(async dish => {\n    const { _id, name, price } = dish;\n    let { ingredients } = dish;\n    let index = ingredients.indexOf(item);\n    ingredients.splice(index, 1);\n\n    const Dish = await api.put(`/dish/${_id}`, {\n      name,\n      price,\n      ingredients\n    });\n    index = dishs.indexOf(Dish);\n    dishs[index] = Dish;\n  });\n  destroyIngredient()\n  localStorage.setItem(\"dishs\", JSON.stringify(dishs));\n\n  loadIngredients();\n}\nasync function destroyIngredient(){\n  await api.delete(`/ingredients/${item._id}`);\n  const index = ingredient.indexOf(item);\n  ingredient.splice(index, 1)\n  localStorage.setItem(\n    \"ingredients\",\n    JSON.stringify(ingredient)\n  );\n}\n\nconst affectDish = useMemo(()=>{\n  return(\n  <Modal show={affect} onHide={handleCloseAffect}>\n        <Modal.Header closeButton>\n          <Modal.Title>A esclusão de ${item.name} irá alterar os seguintes pratos</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{conflits.map(conflit => `${conflit.name} `)}</Modal.Body>\n        <Modal.Footer>\n          <button variant=\"secondary\" onClick={handleCloseAffect}>\n            Cancelar\n          </button>\n          <button variant=\"primary\" onClick={handleAffectDish}>\n            Salvar configurações\n          </button>\n        </Modal.Footer>\n      </Modal>\n)},[conflits, affect])\n  //atualizar lista de contidos em\n  const preview = useMemo(() => {\n    return dishs ? (\n      <ul className=\"ingredient-list\">\n        {dishs.map(dish => (\n          <li key={dish._id}>\n            <h5>{dish.name}</h5>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <spam>Não pertence a nenhum prato</spam>\n    );\n  }, [dishs]);\n  //atualizar a lista de pratos por ingredientes\n  async function handleDishs(idIngre) {\n    const response = await api.get(`/foringredient/${idIngre}`);\n    setDishs(response.data);\n  }\n\n  //criar novo ingrediente\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const response = await api.post(`/ingredients`, { name, classification });\n    ingredient.push(response.data)\n    localStorage.setItem(\"ingredients\", JSON.stringify(ingredient))\n    loadIngredients()\n    window.alert(`${name} adicionado a lista de ingredientes!`);\n    setName(\"\");\n  }\n  //atualizar lista de ingredientes\n  function loadIngredients() {\n    setIngredient(JSON.parse(localStorage.getItem(\"ingredients\")));\n  }\n  useEffect(() => {\n    loadIngredients();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")))\n  }, []);\n\n  //apagar ingrediente\n  async function handleDestroy(ingre) {\n    const response = await api.get(`/foringredient/${ingre._id}`);\n\n    if (response.data.length > 0) {\n      setConflits(response.data)\n      setItem(ingre)\n      handleAffect()\n    }else{\n      destroyIngredient()\n      loadIngredients()\n    }\n  }\n\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"alingIngredients\">\n        <NavBar />\n        <div id=\"containerIngredients\">\n          <div className=\"list sidenav\">\n            <label className=\"title\">Lista de Ingredients</label>\n            {listIngredients}\n          </div>\n          <div className=\"list advert\">\n            <label className=\"title\">Contem em: </label>\n            <header>{preview}</header>\n          </div>\n          <div className=\"list footer \">\n            <label className=\"title\">Novo </label>\n            <form onSubmit={handleSubmit}>\n              <fieldset onSubmit={handleSubmit}>\n                <legend>Ingrediente</legend>\n                <input\n                  type=\"text\"\n                  placeholder=\"Ingrediente\"\n                  value={name}\n                  onChange={event => setName(event.target.value)}\n                />\n\n              </fieldset>\n              <label>Defina a Classificação</label>\n              <select onChange={event => setClassification(event.target.value)}>\n                  <option value=\"\"></option>\n                  {classifications.map(item => {\n                    if(item.section === \"ingredient\"){\n                      return (\n                      <option key={item._id}value={item._id}>{item.classification}</option>\n                      )\n                    }\n                  })}\n                </select>\n              <button type=\"submit\">Adicionar Novo</button>\n            </form>\n          </div>\n        </div>\n      </div>\n      {affectDish}\n    </>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}