{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal } from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\";\nimport destroy from \"../../assets/button/destroy.svg\";\nexport default function Orders() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dishs = _useState2[0],\n        setDishs = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classifications = _useState4[0],\n        setClassifications = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        category = _useState6[0],\n        setCategory = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dish = _useState8[0],\n        setDish = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        show = _useState10[0],\n        setShow = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ingredients = _useState12[0],\n        setIngredients = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        extra = _useState14[0],\n        setExtra = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        command = _useState16[0],\n        setCommand = _useState16[1];\n\n  const _useForm = useForm(),\n        handleSubmit = _useForm.handleSubmit,\n        register = _useForm.register,\n        errors = _useForm.errors;\n\n  const onSubmit = async data => {\n    const ps = data.ps,\n          amount = data.amount;\n    delete data.ps;\n    delete data.amount;\n    let withdraw = [];\n    let extra = [];\n\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      } else {\n        dish.ingredients.map(item => {\n          if (item._id === data[prop]) {\n            withdraw.push(data[prop]);\n            delete data[prop];\n          }\n        });\n\n        if (data[prop]) {\n          extra.push(data[prop]);\n          delete data[prop];\n        }\n      }\n    }\n\n    const response = await api.post(\"orders\", {\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    });\n    let arr = command;\n    arr.push(response.data);\n    setCommand(arr);\n    handleClose();\n  };\n\n  const theCommand = command.length > 0 ? React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"item\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"prato\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), command.map(item => {\n    const index = command.indexOf(item) + 1;\n    return React.createElement(\"li\", {\n      key: item._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, index), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, item.amount, \"x \", item.dish.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: destroy,\n      alt: \"destroy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, item.withdraw.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Retirar: \"), item.withdraw.map(subitem => React.createElement(\"span\", {\n      key: subitem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, subitem.name))) : null, item.extra.length > 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Adicionar: \"), item.extra.map(subitem => React.createElement(\"span\", {\n      key: subitem._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, subitem.name))) : null, item.ps.length > 0 ? React.createElement(React.Fragment, null, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Observa\\xE7\\xE3o:\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item.ps)) : null, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Valor R$\", item.totalPrice))));\n  }))), React.createElement(\"button\", {\n    id: \"confirm-command\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Confirmar\")) : React.createElement(\"span\", {\n    className: \"empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Comanda vazia\");\n\n  function handleClose() {\n    setShow(false);\n  }\n\n  function handleShow(item) {\n    setDish(item);\n    setIngredients(item.ingredients);\n    setShow(true);\n  }\n\n  useEffect(() => {\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"));\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = [];\n\n    function resolveThis(element, index, array) {\n      if (element.classification.classification === \"Extra\") {\n        variable.push(element);\n      }\n    }\n\n    arr.forEach(resolveThis);\n    setExtra(variable);\n  }, []);\n  const navClassifications = useMemo(() => {\n    return React.createElement(\"div\", {\n      id: \"navClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, classifications.map(item => {\n      if (item.section === \"dish\" && item.classification !== \"Extra\") {\n        return React.createElement(\"header\", {\n          key: item._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => setCategory(item.classification),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, item.classification));\n      }\n    }));\n  }, [classifications]);\n  const listDish = useMemo(() => {\n    if (category === \"\") {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Selecione uma categoria\");\n    } else {\n      return React.createElement(\"div\", {\n        id: \"listDish\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, dishs.map(item => {\n        if (item.classification.classification === category) {\n          return React.createElement(\"header\", {\n            key: item._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: () => handleShow(item),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, item.name));\n        }\n      }));\n    }\n  }, [category]);\n  const modal = React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, dish.name)), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Selecione os Ingredientes que deseja retirar\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, ingredients.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Selecione os extras que deseja adicionar:\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, extra.map(item => React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    key: item._id,\n    type: \"checkbox\",\n    name: item.name,\n    value: item._id,\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, item.name))))), React.createElement(Modal.Body, {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"ps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Observa\\xE7\\xF5es\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    name: \"ps\",\n    ref: register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  })), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, \"Quantidade\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    ref: register,\n    min: \"1\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"button\", {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Save Changes\"))));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"alingOrders\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, navClassifications, listDish), React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"command\",\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"command\",\n    className: \"command-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, \"Comanda\"), \" \"), React.createElement(\"nav\", {\n    className: \"command-menu\",\n    id: \"command-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, theCommand)), modal);\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/orders/index.js"],"names":["React","useEffect","useState","useMemo","api","NavBar","HomeBar","Modal","useForm","Orders","dishs","setDishs","classifications","setClassifications","category","setCategory","dish","setDish","show","setShow","ingredients","setIngredients","extra","setExtra","command","setCommand","handleSubmit","register","errors","onSubmit","data","ps","amount","withdraw","prop","map","item","_id","push","response","post","arr","handleClose","theCommand","length","index","indexOf","name","destroy","subitem","totalPrice","handleShow","JSON","parse","localStorage","getItem","variable","resolveThis","element","array","classification","forEach","navClassifications","section","listDish","modal"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useMemo} from \"react\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport { Modal} from 'react-bootstrap';\nimport useForm from \"react-hook-form\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles.css\"\nimport destroy from \"../../assets/button/destroy.svg\";\n\n\n\n\nexport default function Orders() {\n  const [dishs, setDishs] = useState([]);\n  const [classifications, setClassifications] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [dish, setDish] = useState(\"\")\n  const [show, setShow] = useState(false);\n  const [ingredients, setIngredients] = useState([])\n  const [extra, setExtra] = useState([]);\n  const [command, setCommand] = useState([]);\n  const { handleSubmit, register, errors } = useForm();\n\n\n\n\n  const onSubmit = async data => {\n    const { ps, amount } = data;\n    delete data.ps;\n    delete data.amount\n    let withdraw = []\n    let extra = []\n    for (let prop in data) {\n      if (data[prop] === false) {\n        delete data[prop];\n      }else{\n        dish.ingredients.map(item => {\n          if(item._id === data[prop]){\n            withdraw.push(data[prop])\n            delete data[prop]\n          }})\n        if(data[prop]){\n          extra.push(data[prop])\n          delete data[prop]\n        }\n      }\n  }\n    const response = await api.post(\"orders\",{\n      dish: dish._id,\n      withdraw,\n      extra,\n      ps,\n      amount\n    })\n    let arr = command\n    arr.push(response.data)\n\n    setCommand(arr)\n\n    handleClose()\n  }\n\n  const theCommand = command.length > 0\n    ?(\n      <>\n\n      <ul>\n      <table>\n        <tr>\n          <th>item</th>\n          <th>prato</th>\n          <th></th>\n        </tr>\n        {command.map(item => {\n          const index = (command.indexOf(item) +1 )\n            return(\n              <li key={item._id}>\n                <tr>\n                  <td>{index}</td>\n                  <td>{item.amount}x {item.dish.name}</td>\n                  <td><button><img src={destroy} alt=\"destroy\"/></button></td>\n                </tr>\n\n\n\n                <ul>\n                  <li>\n                    {item.withdraw.length > 0\n                      ?<div>\n                        <h5>Retirar: </h5>\n                        {item.withdraw.map(subitem =>(\n                          <span key={subitem._id}>\n                            {subitem.name}\n                          </span>\n                        ))}\n                      </div>\n                    :null}\n                    {item.extra.length > 0\n                      ?<div>\n                        <h5>Adicionar: </h5>\n                        {item.extra.map(subitem =>(\n                          <span key={subitem._id}>\n                            {subitem.name}\n                          </span>\n                        ))}\n                      </div>\n                    :null}\n                    {item.ps.length > 0\n                    ?<>\n                      <h5>Observação:</h5>\n                      <span>{item.ps}</span>\n                    </>\n                    :null }\n                    <h5>Valor R${item.totalPrice}</h5>\n                  </li>\n                </ul>\n              </li>\n        )})}\n        </table>\n      </ul>\n\n      <button id=\"confirm-command\">Confirmar</button>\n      </>\n    )\n    :(<span className=\"empty\">Comanda vazia</span>)\n\n  function handleClose(){\n    setShow(false);\n  }\n function handleShow(item){\n   setDish(item)\n   setIngredients(item.ingredients)\n   setShow(true);\n  }\n\n  useEffect(()=>{\n    const arr = JSON.parse(localStorage.getItem(\"dishs\"))\n    setDishs(arr);\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n    let variable = []\n    function resolveThis(element, index, array){\n    if(element.classification.classification === \"Extra\"){\n      variable.push(element)\n    }\n  }\n\n  arr.forEach(resolveThis)\n  setExtra(variable)\n  },[])\n\n  const navClassifications = useMemo(() => {\n    return(\n      <div id=\"navClass\">\n      {classifications.map(item => {\n        if(item.section === \"dish\" && item.classification !== \"Extra\"){\n          return(\n            <header key={item._id}>\n              <button onClick={() => setCategory(item.classification)}>\n                {item.classification}\n              </button>\n            </header>\n          )\n        }\n      })}\n\n     </div>\n    )\n\n  }, [classifications])\n\n  const listDish = useMemo(() => {\n    if(category === \"\"){\n      return <h1>Selecione uma categoria</h1>\n    }else{\n      return(\n        <div id=\"listDish\">\n          {dishs.map(item => {\n            if(item.classification.classification === category){\n              return(\n                <header key={item._id}>\n                  <button onClick={() => handleShow(item)}>\n                    {item.name}\n                  </button>\n                </header>\n              )\n            }\n          })}\n        </div>\n      )\n    }\n  },[category])\n\n\n\n  const modal = (\n      <Modal show={show} onHide={handleClose}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{dish.name}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body className=\"options\">\n            Selecione os Ingredientes que deseja retirar\n            <div>\n            {ingredients.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            Selecione os extras que deseja adicionar:\n            <div>\n            {extra.map(item => (\n            <>\n              <input\n                key={item._id}\n                type=\"checkbox\"\n                name={item.name}\n                value={item._id}\n                ref={register}\n\n              />\n              <label htmlFor={item.name}>{item.name}</label>\n            </>\n          ))}\n          </div>\n          </Modal.Body>\n          <Modal.Body className=\"options\">\n            <label htmlFor=\"ps\">Observações</label><br/>\n            <textarea name=\"ps\" ref={register} />\n          </Modal.Body>\n          <Modal.Footer>\n            <label htmlFor=\"amount\">Quantidade</label>\n            <input\n                type=\"number\"\n                name=\"amount\"\n                ref={register}\n                min=\"1\"\n                required\n            />\n            <button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </button>\n            <button variant=\"primary\" type=\"submit\">\n              Save Changes\n            </button>\n          </Modal.Footer>\n        </form>\n      </Modal>\n  )\n\n  return (\n    <>\n      <HomeBar />\n      <div id=\"containerOrders\">\n        <NavBar />\n        <div id=\"alingOrders\">\n        {navClassifications}\n        {listDish}\n        </div>\n\n      <input type=\"checkbox\" id=\"command\"hidden />\n      <label htmlFor=\"command\" className=\"command-icon\"><p>Comanda</p> </label>\n\n      <nav className=\"command-menu\" id=\"command-list\" >\n        {theCommand}\n      </nav>\n\n      </div>\n      {modal}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}