{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/restaurant/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport useForm from \"react-hook-form\";\nimport api from \"../../services/api\";\nimport \"./styles.css\";\nimport { Dialog, DialogContent, DialogContentText, DialogTitle, DialogActions } from \"@material-ui/core\";\nexport default function Restaurant() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        type = _useState4[0],\n        setType = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        classifications = _useState6[0],\n        setClassifications = _useState6[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = async data => {\n    const classification = data.classification;\n    const response = await api.post(\"types\", {\n      classification,\n      section: type\n    });\n    classifications.push(response.data);\n    localStorage.setItem(\"classification\", JSON.stringify(classifications));\n    loadClass();\n  };\n\n  function loadClass() {\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }\n\n  useEffect(() => {\n    loadClass();\n  }, []);\n\n  function handleClickOpen(name) {\n    setType(name);\n    setOpen(true);\n  }\n\n  ;\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  ;\n  const mondalIngredient = React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"`Classifica\\xE7\\xF5es de \", type, \"`\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Classifica\\xE7\\xF5es\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, classifications.map(item => {\n    if (item.section === type) {\n      return React.createElement(\"li\", {\n        key: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, item.classification));\n    }\n  }))), React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Nova Classifica\\xE7\\xE3o\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"classification\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Criar\"))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Fechar\")));\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerRestaurant\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Classifica\\xE7\\xF5es\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleClickOpen(\"dish\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Pratos\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleClickOpen(\"ingredient\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Ingredientes\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => handleClickOpen(\"table\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Mesas\")))))), mondalIngredient)));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/restaurant/index.js"],"names":["React","useState","useEffect","NavBar","HomeBar","useForm","api","Dialog","DialogContent","DialogContentText","DialogTitle","DialogActions","Restaurant","open","setOpen","type","setType","classifications","setClassifications","register","handleSubmit","errors","onSubmit","data","classification","response","post","section","push","localStorage","setItem","JSON","stringify","loadClass","parse","getItem","handleClickOpen","name","handleClose","mondalIngredient","map","item","_id","required"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from \"react\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport useForm from \"react-hook-form\";\nimport api from \"../../services/api\";\n\nimport \"./styles.css\"\nimport  {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  DialogActions\n\n} from \"@material-ui/core\";\n\n\nexport default function Restaurant() {\n const [open, setOpen] = useState(false);\n const [type, setType]= useState(\"\");\n const [classifications, setClassifications] = useState([]);\n const {register, handleSubmit, errors } = useForm();\n const onSubmit = async data => {\n    const{ classification } = data\n    const response = await api.post(\"types\",{\n      classification,\n      section: type\n    })\n    classifications.push(response.data)\n\n    localStorage.setItem(\"classification\", JSON.stringify(classifications))\n    loadClass()\n }\n function loadClass(){\n  setClassifications(JSON.parse(localStorage.getItem(\"classification\")))\n }\n useEffect(() => {\n  loadClass()\n },[])\n function handleClickOpen(name) {\n   setType(name)\n\n    setOpen(true);\n\n};\n\nfunction handleClose(){\n    setOpen(false);\n\n};\nconst mondalIngredient = (\n  <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">`Classificações de {type}`</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <h3>Classificações</h3>\n            <ul>\n              {classifications.map(item => {\n                if(item.section === type){\n                  return(\n                    <li key={item._id}><span>{item.classification}</span></li>\n                  )\n                }\n              })}\n\n            </ul>\n          </DialogContentText>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n              <legend>Nova Classificação</legend>\n              <input\n                type=\"text\"\n                name=\"classification\"\n                ref={register({ required: true })}/>\n            </fieldset>\n            <button type=\"submit\">Criar</button>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <button onClick={handleClose}>Fechar</button>\n\n        </DialogActions>\n      </Dialog>\n)\n return (\n    <>\n      <HomeBar />\n      <div id=\"containerRestaurant\">\n      <NavBar />\n      <div>\n        <nav className=\"options\">\n          <ul>\n            <li>\n              <span>Classificações</span>\n              <ul>\n               <li><button onClick={() => handleClickOpen(\"dish\") }>Pratos</button></li>\n                <li><button onClick={() => handleClickOpen(\"ingredient\") }>Ingredientes</button></li>\n                <li><button onClick={() => handleClickOpen(\"table\") }>Mesas</button></li>\n              </ul>\n            </li>\n          </ul>\n        </nav>\n        {mondalIngredient}\n      </div>\n      </div>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}