{"ast":null,"code":"import _slicedToArray from \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/table/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport useForm from \"react-hook-form\";\nimport api from \"../../services/api\";\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport \"./styles.css\";\nimport direction from \"../../assets/button/direction.svg\";\nimport exclude from \"../../assets/button/destroy.svg\";\nexport default function Table() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tables = _useState2[0],\n        setTables = _useState2[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        classifications = _useState4[0],\n        setClassifications = _useState4[1];\n\n  const onSubmit = async data => {\n    const number = data.number,\n          classification = data.classification,\n          vacancies = data.vacancies;\n    const response = await api.post(\"/table\", {\n      number,\n      vacancies,\n      classification\n    });\n    tables.push(response.data);\n    setTables(tables);\n    localStorage.setItem(\"tables\", JSON.stringify(tables));\n    window.alert(\"mesa \".concat(number, \" em \").concat(classification, \" foi adicionado a lista de mesas!\"));\n  };\n\n  const tableList = React.createElement(\"ul\", {\n    className: \"table-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, tables.map(item => React.createElement(\"li\", {\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    key: item._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Mesa: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, item.number)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Lugares: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, item.vacancies)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Disponibilidade: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, item.availability === true ? \"Disponivel\" : \"Ocupada\")), React.createElement(\"button\", {\n    className: \"direction\",\n    onClick: () => handleAvailability(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: direction,\n    alt: \"direction\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"exclude\",\n    onClick: () => handleDestroy(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: exclude,\n    alt: \"destroy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })))));\n\n  async function handleDestroy(table) {\n    const response = await api.delete(\"table/\".concat(table._id));\n    console.log(response);\n    const index = tables.indexOf(table._id);\n    tables.splice(index, 1);\n    console.log(tables);\n    localStorage.setItem(\"tables\", JSON.stringify(tables));\n    loadTable();\n  }\n\n  function handleAvailability(table) {\n    table.availability ? table.availability = false : table.availability = true;\n    const index = tables.indexOf(table._id);\n    tables[index] = table;\n    localStorage.setItem(\"tables\", JSON.stringify(tables));\n    loadTable();\n  }\n\n  function loadTable() {\n    setTables(JSON.parse(localStorage.getItem(\"tables\")));\n  }\n\n  useEffect(() => {\n    loadTable();\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")));\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(HomeBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"containerTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"listTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, tableList), React.createElement(\"div\", {\n    id: \"createTable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"N\\xFAmero\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"N\\xFAmero\",\n    name: \"number\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Local\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"local\",\n    name: \"classification\",\n    ref: register({\n      required: true,\n      min: 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Lugares\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"lugares\",\n    name: \"vacancies\",\n    ref: register({\n      required: true,\n      min: 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Classifica\\xE7\\xE3o\"), React.createElement(\"select\", {\n    name: \"classification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), classifications.map(item => {\n    if (item.section === \"table\") {\n      return React.createElement(\"option\", {\n        key: item._id,\n        value: item._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, item.classification);\n    }\n  }))), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/tadeu/JSProjects/PI/FluxoDeRestaurante/frontend/web/src/pages/table/index.js"],"names":["React","useState","useEffect","useForm","api","NavBar","HomeBar","Table","tables","setTables","register","handleSubmit","errors","classifications","setClassifications","onSubmit","data","number","classification","vacancies","response","post","push","localStorage","setItem","JSON","stringify","window","alert","tableList","map","item","_id","availability","handleAvailability","direction","handleDestroy","exclude","table","delete","console","log","index","indexOf","splice","loadTable","parse","getItem","required","min","section"],"mappings":"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","sourcesContent":["import React, { useState, useEffect  } from \"react\";\nimport useForm from \"react-hook-form\";\nimport api from \"../../services/api\"\n\nimport NavBar from \"../../components/navBar\";\nimport HomeBar from \"../../components/homeBar\";\nimport \"./styles.css\";\n\nimport direction from \"../../assets/button/direction.svg\";\nimport exclude from \"../../assets/button/destroy.svg\";\n\nexport default function Table() {\n  const [tables, setTables]= useState([]);\n  const { register, handleSubmit, errors } = useForm();\n  const [classifications, setClassifications]= useState([])\n\n  const onSubmit = async data => {\n    const { number, classification, vacancies } = data;\n   const response = await api.post(\"/table\", {\n      number,\n      vacancies,\n      classification\n  });\n  tables.push(response.data)\n\n\n    setTables(tables);\n    localStorage.setItem(\"tables\", JSON.stringify(tables))\n    window.alert(`mesa ${number} em ${classification} foi adicionado a lista de mesas!`);\n\n\n}\n  const tableList=(\n  <ul className=\"table-list\">\n      {tables.map(item => (\n        <li key={item._id}>\n          <span key={item._id}>\n            Mesa: <strong>{item.number}</strong>\n          </span>\n          <span>\n            Lugares: <strong>{item.vacancies }</strong>\n          </span>\n          <span>\n            Disponibilidade: <strong>{item.availability=== true?\"Disponivel\":\"Ocupada\"}</strong>\n          </span>\n          <button className=\"direction\" onClick={() => handleAvailability(item)}>\n            <img src={direction} alt=\"direction\" />\n          </button>\n          <button className=\"exclude\" onClick={() => handleDestroy(item)}>\n            <img src={exclude} alt=\"destroy\" />\n          </button>\n        </li>\n      ))}\n    </ul>\n\n\n)\n\n\n  async function handleDestroy(table){\n    const response = await api.delete(`table/${table._id}`)\n    console.log(response)\n    const index = tables.indexOf(table._id)\n    tables.splice(index,1)\n    console.log(tables)\n    localStorage.setItem(\n      \"tables\",\n    JSON.stringify( tables))\n    loadTable()\n\n\n  }\n  function handleAvailability(table){\n    table.availability?table.availability = false:table.availability = true\n    const index = tables.indexOf(table._id)\n    tables[index] = table\n    localStorage.setItem(\"tables\", JSON.stringify( tables))\n    loadTable()\n\n  }\nfunction loadTable(){\n  setTables(JSON.parse(localStorage.getItem(\"tables\")));\n\n}\n  useEffect(() => {\n    loadTable()\n    setClassifications(JSON.parse(localStorage.getItem(\"classification\")))\n  }, []);\n  return (\n\n    <>\n      <HomeBar />\n      <div id=\"containerTable\">\n        <NavBar />\n        <div className=\"grid\">\n          <div id=\"listTable\" >\n           {tableList}\n          </div>\n          <div id=\"createTable\" >\n          <form onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                <legend>Número</legend>\n                <input\n                  type=\"number\"\n                  placeholder=\"Número\"\n                  name=\"number\"\n                  ref={register({ required: true })}\n                />\n              </fieldset>\n              <fieldset>\n                <legend>Local</legend>\n                <input\n                  type=\"text\"\n                  placeholder=\"local\"\n                  name=\"classification\"\n                  ref={register({ required: true, min: 0 })}\n                />\n              </fieldset>\n              <fieldset>\n                <legend>Lugares</legend>\n                <input\n                  type=\"number\"\n                  placeholder=\"lugares\"\n                  name=\"vacancies\"\n                  ref={register({ required: true, min: 0 })}\n                />\n              </fieldset>\n              <fieldset>\n                <legend>Classificação</legend>\n                <select name=\"classification\">\n                  <option value=\"\"></option>\n                  {classifications.map(item => {\n                    if(item.section === \"table\"){\n                      return(\n                      <option key={item._id} value={item._id}>{item.classification}</option>\n                      )\n                    }\n                  })}\n                </select>\n              </fieldset>\n              <input type=\"submit\" />\n            </form>\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}